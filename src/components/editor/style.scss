@use "../theme" as *;

.editor {
  display: flex;
  flex: initial;
  flex-direction: column;
  align-items: flex-start;
  justify-content: center;

  color: theme-var(text);
  background: theme-var(background);
  font-family: theme-var(fontFamily);
  font-weight: theme-var(fontWeight);
  font-size: 1em;
  line-height: 1.7em;
  width: 100%;

  .ProseMirror {
    width: 100%;
    position: relative;
    outline: none;
    word-wrap: break-word;
    white-space: pre-wrap;
    white-space: break-spaces;
    // -webkit-font-variant-ligatures: none;
    // font-variant-ligatures: none;
    font-feature-settings: "liga" 0;
  }

  pre {
    white-space: pre-wrap;
  }

  img {
    max-width: 100%;
  }

  .image {
    text-align: center;

    img {
      @include read-only {
        pointer-events: initial;
      }
      pointer-events: none;
    }
  }

  .image.placeholder {
    position: relative;
    background: theme-var(background);

    img {
      opacity: 0.5;
    }
  }

  .ProseMirror-hideselection *::selection {
    background: transparent;
  }
  .ProseMirror-hideselection *::-moz-selection {
    background: transparent;
  }
  .ProseMirror-hideselection {
    caret-color: transparent;
  }

  .ProseMirror-selectednode {
    @include read-only {
      outline: 2px solid transparent;
    }
    outline: 2px solid theme-var(selected);
  }

  /* Make sure li selections wrap around markers */

  li.ProseMirror-selectednode {
    outline: none;
  }

  li.ProseMirror-selectednode:after {
    content: "";
    position: absolute;
    left: -32px;
    right: -2px;
    top: -2px;
    bottom: -2px;
    border: 2px solid theme-var(selected);
    pointer-events: none;
  }

  .with-emoji {
    margin-left: -1em;
  }

  .placeholder {
    &:before {
      @include read-only {
        content: "";
      }
      content: attr(data-empty-text);
      display: block;
      pointer-events: none;
      height: 0;
      color: theme-var(placeholder);
    }
  }

  @media print {
    .placeholder {
      display: none;
    }
  }

  .notice-block {
    display: flex;
    align-items: center;
    background: theme-var(noticeInfoBackground);
    color: theme-var(noticeInfoText);
    border-radius: 4px;
    padding: 8px 16px;
    margin: 8px 0;

    a {
      color: theme-var(noticeInfoText);
    }

    a:not(.heading-name) {
      text-decoration: underline;
    }
  }

  .notice-block .icon {
    width: 24px;
    height: 24px;
    align-self: flex-start;
    margin-right: 4px;
    position: relative;
    top: 1px;
  }

  .notice-block.tip {
    background: theme-var(noticeTipBackground);
    color: theme-var(noticeTipText);

    a {
      color: theme-var(noticeTipText);
    }
  }

  .notice-block.warning {
    background: theme-var(noticeWarningBackground);
    color: theme-var(noticeWarningText);

    a {
      color: theme-var(noticeWarningText);
    }
  }

  .template-placeholder {
    color: theme-var(placeholder);
    border-bottom: 1px dotted theme-var(placeholder);
    border-radius: 2px;
    cursor: text;

    &:hover {
      @include read-only {
        border-bottom: 1px dotted theme-var(placeholder);
      }
      border-bottom: 1px dotted theme-var(textSecondary);
    }
  }

  a {
    color: theme-var(link);
  }

  a:hover {
    @include read-only {
      text-decoration: underline;
    }
    text-decoration: none;
  }

  ul.checkbox_list {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  ul.checkbox_list li {
    display: flex;
  }

  ul.checkbox_list li.checked > div > p {
    color: theme-var(textSecondary);
    text-decoration: line-through;
  }

  ul.checkbox_list li input {
    @include read-only {
      pointer-events: none;
      opacity: 0.75;
    }
    @include read-only-write-checkboxes {
      pointer-events: initial;
      opacity: 1;
    }
    pointer-events: initial;
    opacity: 1;
    margin: 0 0.5em 0 0;
    width: 14px;
    height: 14px;
  }

  mark {
    border-radius: 1px;
    color: theme-var(black);
    background: theme-var(textHighlight);
  }

  .token.comment,
  .token.prolog,
  .token.doctype,
  .token.cdata {
    color: theme-var(codeComment);
  }

  .token.punctuation {
    color: theme-var(codePunctuation);
  }

  .token.namespace {
    opacity: 0.7;
  }

  .token.operator,
  .token.boolean,
  .token.number {
    color: theme-var(codeNumber);
  }

  .token.property {
    color: theme-var(codeProperty);
  }

  .token.tag {
    color: theme-var(codeTag);
  }

  .token.string {
    color: theme-var(codeString);
  }

  .token.selector {
    color: theme-var(codeSelector);
  }

  .token.attr-name {
    color: theme-var(codeAttr);
  }

  .token.entity,
  .token.url,
  .language-css .token.string,
  .style .token.string {
    color: theme-var(codeEntity);
  }

  .token.attr-value,
  .token.keyword,
  .token.control,
  .token.directive,
  .token.unit {
    color: theme-var(codeKeyword);
  }

  .token.function {
    color: theme-var(codeFunction);
  }

  .token.statement,
  .token.regex,
  .token.atrule {
    color: theme-var(codeStatement);
  }

  .token.placeholder,
  .token.variable {
    color: theme-var(codePlaceholder);
  }

  .token.deleted {
    text-decoration: line-through;
  }

  .token.inserted {
    border-bottom: 1px dotted theme-var(codeInserted);
    text-decoration: none;
  }

  .token.italic {
    font-style: italic;
  }

  .token.important,
  .token.bold {
    font-weight: bold;
  }

  .token.important {
    color: theme-var(codeImportant);
  }

  .token.entity {
    cursor: help;
  }

  table {
    width: 100%;
    border-collapse: collapse;
    border-radius: 4px;
    margin-top: 1em;

    tr {
      position: relative;
      border-bottom: 1px solid theme-var(tableDivider);
    }

    th {
      background: theme-var(tableHeaderBackground);
    }

    td,
    th {
      position: relative;
      vertical-align: top;
      border: 1px solid theme-var(tableDivider);
      position: relative;
      padding: 4px 8px;
      text-align: left;
      min-width: 100px;
    }

    .selectedCell {
      @include read-only {
        background: inherit;
      }
      background: theme-var(tableSelectedBackground);
    }

    .grip-column {
      cursor: pointer;
      position: absolute;
      top: -16px;
      left: 0;
      width: 100%;
      height: 12px;
      background: theme-var(tableDivider);
      border-bottom: 3px solid theme-var(background);

      @include read-only {
        display: none;
      }
      display: block;

      &:hover {
        background: theme-var(text);
      }
      &.first {
        border-top-left-radius: 3px;
      }
      &.last {
        border-top-right-radius: 3px;
      }
      &.selected {
        background: theme-var(tableSelected);
      }
    }

    .grip-row {
      cursor: pointer;
      position: absolute;
      left: -16px;
      top: 0;
      height: 100%;
      width: 12px;
      background: theme-var(tableDivider);
      border-right: 3px solid theme-var(background);

      @include read-only {
        display: none;
      }
      display: block;

      &:hover {
        background: theme-var(text);
      }
      &.first {
        border-top-left-radius: 3px;
      }
      &.last {
        border-bottom-left-radius: 3px;
      }
      &.selected {
        background: theme-var(tableSelected);
      }
    }

    .grip-table {
      cursor: pointer;
      background: theme-var(tableDivider);
      width: 13px;
      height: 13px;
      border-radius: 13px;
      border: 2px solid theme-var(background);
      position: absolute;
      top: -18px;
      left: -18px;

      @include read-only {
        display: none;
      }
      display: block;

      &:hover {
        background: theme-var(text);
      }
      &.selected {
        background: theme-var(tableSelected);
      }
    }
  }

  .scrollable-wrapper {
    position: relative;
    margin: 0.5em 0px;
  }

  .scrollable {
    overflow-y: hidden;
    overflow-x: scroll;
    padding-left: 1em;
    margin-left: -1em;
    border-left: 1px solid transparent;
    border-right: 1px solid transparent;
    transition: border 250ms ease-in-out 0s;
  }

  .scrollable-shadow {
    position: absolute;
    top: 0;
    bottom: 0;
    left: -1em;
    width: 16px;
    transition: box-shadow 250ms ease-in-out;
    border: 0px solid transparent;
    border-left-width: 1em;
    pointer-events: none;

    &.left {
      box-shadow: 16px 0 16px -16px inset rgba(0, 0, 0, 0.25);
      border-left: 1em solid theme-var(background);
    }

    &.right {
      right: 0;
      left: auto;
      box-shadow: -16px 0 16px -16px inset rgba(0, 0, 0, 0.25);
    }
  }

  .block-menu-trigger {
    .read-only & {
      display: "none";
    }

    display: block;
    height: 1em;
    color: theme-var(textSecondary);
    background: none;
    border-radius: 100%;
    font-size: 30px;
    position: absolute;
    transform: scale(0.9);
    transition: color 150ms cubic-bezier(0.175, 0.885, 0.32, 1.275),
      transform 150ms cubic-bezier(0.175, 0.885, 0.32, 1.275);
    outline: none;
    border: 0;
    line-height: 1;
    margin-top: -6px;
    left: -34px;

    &:hover,
    &:focus {
      cursor: pointer;
      transform: scale(1);
      color: theme-var(text);
    }
  }

  @media print {
    .block-menu-trigger {
      display: none;
    }
  }

  .ProseMirror-gapcursor {
    display: none;
    pointer-events: none;
    position: absolute;
  }

  .ProseMirror-gapcursor:after {
    content: "";
    display: block;
    position: absolute;
    top: -2px;
    width: 20px;
    border-top: 1px solid theme-var(cursor);
    animation: ProseMirror-cursor-blink 1.1s steps(2, start) infinite;
  }

  @keyframes ProseMirror-cursor-blink {
    to {
      visibility: hidden;
    }
  }

  .ProseMirror-focused .ProseMirror-gapcursor {
    display: block;
  }

  @media print {
    em,
    blockquote {
      font-family: "SF Pro Text", theme-var(fontFamily);
    }
  }
}
