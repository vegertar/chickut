(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{1329:function(module,__webpack_exports__,__webpack_require__){"use strict";function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}__webpack_require__.d(__webpack_exports__,"a",(function(){return IdleScheduler}));var IdleScheduler=function(){function IdleScheduler(){!function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,IdleScheduler),function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(this,"task",void 0)}return function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Constructor}(IdleScheduler,[{key:"request",value:function request(){this.cancel();var request=window.requestIdleCallback||window.requestAnimationFrame;return new Promise((function(resolve){return request(resolve)}))}},{key:"cancel",value:function cancel(){var cancel=window.cancelIdleCallack||window.cancelAnimationFrame;this.task&&cancel(this.task)}}]),IdleScheduler}()},1330:function(module,exports,__webpack_require__){!function(exports,chalk){"use strict";chalk=chalk&&chalk.hasOwnProperty("default")?chalk.default:chalk;var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},classCallCheck=function(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")},createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),get=function get(object,property,receiver){null===object&&(object=Function.prototype);var desc=Object.getOwnPropertyDescriptor(object,property);if(void 0===desc){var parent=Object.getPrototypeOf(object);return null===parent?void 0:get(parent,property,receiver)}if("value"in desc)return desc.value;var getter=desc.get;return void 0!==getter?getter.call(receiver):void 0},inherits=function(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)},possibleConstructorReturn=function(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call},slicedToArray=function(arr,i){if(Array.isArray(arr))return arr;if(Symbol.iterator in Object(arr))return function sliceIterator(arr,i){var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{!_n&&_i.return&&_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i);throw new TypeError("Invalid attempt to destructure non-iterable instance")},toConsumableArray=function(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++)arr2[i]=arr[i];return arr2}return Array.from(arr)},Processor=function(){function Processor(options){classCallCheck(this,Processor),this.selfOptions=options||{},this.pipes={}}return createClass(Processor,[{key:"options",value:function options(_options){return _options&&(this.selfOptions=_options),this.selfOptions}},{key:"pipe",value:function pipe(name,pipeArg){var pipe=pipeArg;if("string"==typeof name){if(void 0===pipe)return this.pipes[name];this.pipes[name]=pipe}if(name&&name.name){if(pipe=name,pipe.processor===this)return pipe;this.pipes[pipe.name]=pipe}return pipe.processor=this,pipe}},{key:"process",value:function process(input,pipe){var context=input;context.options=this.options();for(var nextPipe=pipe||input.pipe||"default",lastPipe=void 0,lastContext=void 0;nextPipe;)void 0!==context.nextAfterChildren&&(context.next=context.nextAfterChildren,context.nextAfterChildren=null),"string"==typeof nextPipe&&(nextPipe=this.pipe(nextPipe)),nextPipe.process(context),lastContext=context,lastPipe=nextPipe,nextPipe=null,context&&context.next&&(context=context.next,nextPipe=lastContext.nextPipe||context.pipe||lastPipe);return context.hasResult?context.result:void 0}}]),Processor}(),Pipe=function(){function Pipe(name){classCallCheck(this,Pipe),this.name=name,this.filters=[]}return createClass(Pipe,[{key:"process",value:function process(input){if(!this.processor)throw new Error("add this pipe to a processor before using it");for(var debug=this.debug,length=this.filters.length,context=input,index=0;index<length;index++){var filter=this.filters[index];if(debug&&this.log("filter: "+filter.filterName),filter(context),"object"===(void 0===context?"undefined":_typeof(context))&&context.exiting){context.exiting=!1;break}}!context.next&&this.resultCheck&&this.resultCheck(context)}},{key:"log",value:function log(msg){console.log("[jsondiffpatch] "+this.name+" pipe, "+msg)}},{key:"append",value:function append(){var _filters;return(_filters=this.filters).push.apply(_filters,arguments),this}},{key:"prepend",value:function prepend(){var _filters2;return(_filters2=this.filters).unshift.apply(_filters2,arguments),this}},{key:"indexOf",value:function indexOf(filterName){if(!filterName)throw new Error("a filter name is required");for(var index=0;index<this.filters.length;index++)if(this.filters[index].filterName===filterName)return index;throw new Error("filter not found: "+filterName)}},{key:"list",value:function list(){return this.filters.map((function(f){return f.filterName}))}},{key:"after",value:function after(filterName){var index=this.indexOf(filterName),params=Array.prototype.slice.call(arguments,1);if(!params.length)throw new Error("a filter is required");return params.unshift(index+1,0),Array.prototype.splice.apply(this.filters,params),this}},{key:"before",value:function before(filterName){var index=this.indexOf(filterName),params=Array.prototype.slice.call(arguments,1);if(!params.length)throw new Error("a filter is required");return params.unshift(index,0),Array.prototype.splice.apply(this.filters,params),this}},{key:"replace",value:function replace(filterName){var index=this.indexOf(filterName),params=Array.prototype.slice.call(arguments,1);if(!params.length)throw new Error("a filter is required");return params.unshift(index,1),Array.prototype.splice.apply(this.filters,params),this}},{key:"remove",value:function remove(filterName){var index=this.indexOf(filterName);return this.filters.splice(index,1),this}},{key:"clear",value:function clear(){return this.filters.length=0,this}},{key:"shouldHaveResult",value:function shouldHaveResult(should){if(!1!==should){if(!this.resultCheck){var pipe=this;return this.resultCheck=function(context){if(!context.hasResult){console.log(context);var error=new Error(pipe.name+" failed");throw error.noResult=!0,error}},this}}else this.resultCheck=null}}]),Pipe}(),Context=function(){function Context(){classCallCheck(this,Context)}return createClass(Context,[{key:"setResult",value:function setResult(result){return this.result=result,this.hasResult=!0,this}},{key:"exit",value:function exit(){return this.exiting=!0,this}},{key:"switchTo",value:function switchTo(next,pipe){return"string"==typeof next||next instanceof Pipe?this.nextPipe=next:(this.next=next,pipe&&(this.nextPipe=pipe)),this}},{key:"push",value:function push(child,name){return child.parent=this,void 0!==name&&(child.childName=name),child.root=this.root||this,child.options=child.options||this.options,this.children?(this.children[this.children.length-1].next=child,this.children.push(child)):(this.children=[child],this.nextAfterChildren=this.next||null,this.next=child),child.next=this,this}}]),Context}(),isArray="function"==typeof Array.isArray?Array.isArray:function(a){return a instanceof Array};function clone(arg){if("object"!==(void 0===arg?"undefined":_typeof(arg)))return arg;if(null===arg)return null;if(isArray(arg))return arg.map(clone);if(arg instanceof Date)return new Date(arg.getTime());if(arg instanceof RegExp)return function cloneRegExp(re){var regexMatch=/^\/(.*)\/([gimyu]*)$/.exec(re.toString());return new RegExp(regexMatch[1],regexMatch[2])}(arg);var cloned={};for(var name in arg)Object.prototype.hasOwnProperty.call(arg,name)&&(cloned[name]=clone(arg[name]));return cloned}var DiffContext=function(_Context){function DiffContext(left,right){classCallCheck(this,DiffContext);var _this=possibleConstructorReturn(this,(DiffContext.__proto__||Object.getPrototypeOf(DiffContext)).call(this));return _this.left=left,_this.right=right,_this.pipe="diff",_this}return inherits(DiffContext,_Context),createClass(DiffContext,[{key:"setResult",value:function setResult(result){if(this.options.cloneDiffValues&&"object"===(void 0===result?"undefined":_typeof(result))){var clone$$1="function"==typeof this.options.cloneDiffValues?this.options.cloneDiffValues:clone;"object"===_typeof(result[0])&&(result[0]=clone$$1(result[0])),"object"===_typeof(result[1])&&(result[1]=clone$$1(result[1]))}return Context.prototype.setResult.apply(this,arguments)}}]),DiffContext}(Context),PatchContext=function(_Context){function PatchContext(left,delta){classCallCheck(this,PatchContext);var _this=possibleConstructorReturn(this,(PatchContext.__proto__||Object.getPrototypeOf(PatchContext)).call(this));return _this.left=left,_this.delta=delta,_this.pipe="patch",_this}return inherits(PatchContext,_Context),PatchContext}(Context),ReverseContext=function(_Context){function ReverseContext(delta){classCallCheck(this,ReverseContext);var _this=possibleConstructorReturn(this,(ReverseContext.__proto__||Object.getPrototypeOf(ReverseContext)).call(this));return _this.delta=delta,_this.pipe="reverse",_this}return inherits(ReverseContext,_Context),ReverseContext}(Context),isArray$1="function"==typeof Array.isArray?Array.isArray:function(a){return a instanceof Array},diffFilter=function trivialMatchesDiffFilter(context){if(context.left!==context.right)if(void 0!==context.left)if(void 0!==context.right){if("function"==typeof context.left||"function"==typeof context.right)throw new Error("functions are not supported");context.leftType=null===context.left?"null":_typeof(context.left),context.rightType=null===context.right?"null":_typeof(context.right),context.leftType===context.rightType&&"boolean"!==context.leftType&&"number"!==context.leftType?("object"===context.leftType&&(context.leftIsArray=isArray$1(context.left)),"object"===context.rightType&&(context.rightIsArray=isArray$1(context.right)),context.leftIsArray===context.rightIsArray?context.left instanceof RegExp&&(context.right instanceof RegExp?context.setResult([context.left.toString(),context.right.toString()]).exit():context.setResult([context.left,context.right]).exit()):context.setResult([context.left,context.right]).exit()):context.setResult([context.left,context.right]).exit()}else context.setResult([context.left,0,0]).exit();else{if("function"==typeof context.right)throw new Error("functions are not supported");context.setResult([context.right]).exit()}else context.setResult(void 0).exit()};diffFilter.filterName="trivial";var patchFilter=function trivialMatchesPatchFilter(context){if(void 0!==context.delta){if(context.nested=!isArray$1(context.delta),!context.nested)if(1!==context.delta.length)if(2!==context.delta.length)3===context.delta.length&&0===context.delta[2]&&context.setResult(void 0).exit();else{if(context.left instanceof RegExp){var regexArgs=/^\/(.*)\/([gimyu]+)$/.exec(context.delta[1]);if(regexArgs)return void context.setResult(new RegExp(regexArgs[1],regexArgs[2])).exit()}context.setResult(context.delta[1]).exit()}else context.setResult(context.delta[0]).exit()}else context.setResult(context.left).exit()};patchFilter.filterName="trivial";var reverseFilter=function trivialReferseFilter(context){void 0!==context.delta?(context.nested=!isArray$1(context.delta),context.nested||(1!==context.delta.length?2!==context.delta.length?3===context.delta.length&&0===context.delta[2]&&context.setResult([context.delta[0]]).exit():context.setResult([context.delta[1],context.delta[0]]).exit():context.setResult([context.delta[0],0,0]).exit())):context.setResult(context.delta).exit()};function collectChildrenDiffFilter(context){if(context&&context.children){for(var length=context.children.length,child=void 0,result=context.result,index=0;index<length;index++)void 0!==(child=context.children[index]).result&&((result=result||{})[child.childName]=child.result);result&&context.leftIsArray&&(result._t="a"),context.setResult(result).exit()}}function objectsDiffFilter(context){if(!context.leftIsArray&&"object"===context.leftType){var name=void 0,child=void 0,propertyFilter=context.options.propertyFilter;for(name in context.left)Object.prototype.hasOwnProperty.call(context.left,name)&&(propertyFilter&&!propertyFilter(name,context)||(child=new DiffContext(context.left[name],context.right[name]),context.push(child,name)));for(name in context.right)Object.prototype.hasOwnProperty.call(context.right,name)&&(propertyFilter&&!propertyFilter(name,context)||void 0===context.left[name]&&(child=new DiffContext(void 0,context.right[name]),context.push(child,name)));context.children&&0!==context.children.length?context.exit():context.setResult(void 0).exit()}}reverseFilter.filterName="trivial",collectChildrenDiffFilter.filterName="collectChildren",objectsDiffFilter.filterName="objects";var patchFilter$1=function nestedPatchFilter(context){if(context.nested&&!context.delta._t){var name=void 0,child=void 0;for(name in context.delta)child=new PatchContext(context.left[name],context.delta[name]),context.push(child,name);context.exit()}};patchFilter$1.filterName="objects";var collectChildrenPatchFilter=function collectChildrenPatchFilter(context){if(context&&context.children&&!context.delta._t){for(var length=context.children.length,child=void 0,index=0;index<length;index++)child=context.children[index],Object.prototype.hasOwnProperty.call(context.left,child.childName)&&void 0===child.result?delete context.left[child.childName]:context.left[child.childName]!==child.result&&(context.left[child.childName]=child.result);context.setResult(context.left).exit()}};collectChildrenPatchFilter.filterName="collectChildren";var reverseFilter$1=function nestedReverseFilter(context){if(context.nested&&!context.delta._t){var name=void 0,child=void 0;for(name in context.delta)child=new ReverseContext(context.delta[name]),context.push(child,name);context.exit()}};function collectChildrenReverseFilter(context){if(context&&context.children&&!context.delta._t){for(var length=context.children.length,child=void 0,delta={},index=0;index<length;index++)delta[(child=context.children[index]).childName]!==child.result&&(delta[child.childName]=child.result);context.setResult(delta).exit()}}reverseFilter$1.filterName="objects",collectChildrenReverseFilter.filterName="collectChildren";var defaultMatch=function defaultMatch(array1,array2,index1,index2){return array1[index1]===array2[index2]},lcs_get=function get(array1,array2,match,context){var innerContext=context||{},result=function backtrack(matrix,array1,array2,context){for(var index1=array1.length,index2=array2.length,subsequence={sequence:[],indices1:[],indices2:[]};0!==index1&&0!==index2;)matrix.match(array1,array2,index1-1,index2-1,context)?(subsequence.sequence.unshift(array1[index1-1]),subsequence.indices1.unshift(index1-1),subsequence.indices2.unshift(index2-1),--index1,--index2):matrix[index1][index2-1]>matrix[index1-1][index2]?--index2:--index1;return subsequence}(function lengthMatrix(array1,array2,match,context){var len1=array1.length,len2=array2.length,x=void 0,y=void 0,matrix=[len1+1];for(x=0;x<len1+1;x++)for(matrix[x]=[len2+1],y=0;y<len2+1;y++)matrix[x][y]=0;for(matrix.match=match,x=1;x<len1+1;x++)for(y=1;y<len2+1;y++)match(array1,array2,x-1,y-1,context)?matrix[x][y]=matrix[x-1][y-1]+1:matrix[x][y]=Math.max(matrix[x-1][y],matrix[x][y-1]);return matrix}(array1,array2,match||defaultMatch,innerContext),array1,array2,innerContext);return"string"==typeof array1&&"string"==typeof array2&&(result.sequence=result.sequence.join("")),result},isArray$2="function"==typeof Array.isArray?Array.isArray:function(a){return a instanceof Array},arrayIndexOf="function"==typeof Array.prototype.indexOf?function(array,item){return array.indexOf(item)}:function(array,item){for(var length=array.length,i=0;i<length;i++)if(array[i]===item)return i;return-1};function matchItems(array1,array2,index1,index2,context){var value1=array1[index1],value2=array2[index2];if(value1===value2)return!0;if("object"!==(void 0===value1?"undefined":_typeof(value1))||"object"!==(void 0===value2?"undefined":_typeof(value2)))return!1;var objectHash=context.objectHash;if(!objectHash)return context.matchByPosition&&index1===index2;var hash1=void 0,hash2=void 0;return"number"==typeof index1?(context.hashCache1=context.hashCache1||[],void 0===(hash1=context.hashCache1[index1])&&(context.hashCache1[index1]=hash1=objectHash(value1,index1))):hash1=objectHash(value1),void 0!==hash1&&("number"==typeof index2?(context.hashCache2=context.hashCache2||[],void 0===(hash2=context.hashCache2[index2])&&(context.hashCache2[index2]=hash2=objectHash(value2,index2))):hash2=objectHash(value2),void 0!==hash2&&hash1===hash2)}var diffFilter$1=function arraysDiffFilter(context){if(context.leftIsArray){var matchContext={objectHash:context.options&&context.options.objectHash,matchByPosition:context.options&&context.options.matchByPosition},commonHead=0,commonTail=0,index=void 0,index1=void 0,index2=void 0,array1=context.left,array2=context.right,len1=array1.length,len2=array2.length,child=void 0;for(len1>0&&len2>0&&!matchContext.objectHash&&"boolean"!=typeof matchContext.matchByPosition&&(matchContext.matchByPosition=!function arraysHaveMatchByRef(array1,array2,len1,len2){for(var index1=0;index1<len1;index1++)for(var val1=array1[index1],index2=0;index2<len2;index2++){var val2=array2[index2];if(index1!==index2&&val1===val2)return!0}}(array1,array2,len1,len2));commonHead<len1&&commonHead<len2&&matchItems(array1,array2,commonHead,commonHead,matchContext);)index=commonHead,child=new DiffContext(context.left[index],context.right[index]),context.push(child,index),commonHead++;for(;commonTail+commonHead<len1&&commonTail+commonHead<len2&&matchItems(array1,array2,len1-1-commonTail,len2-1-commonTail,matchContext);)index1=len1-1-commonTail,index2=len2-1-commonTail,child=new DiffContext(context.left[index1],context.right[index2]),context.push(child,index2),commonTail++;var result=void 0;if(commonHead+commonTail!==len1)if(commonHead+commonTail!==len2){delete matchContext.hashCache1,delete matchContext.hashCache2;var trimmed1=array1.slice(commonHead,len1-commonTail),trimmed2=array2.slice(commonHead,len2-commonTail),seq=lcs_get(trimmed1,trimmed2,matchItems,matchContext),removedItems=[];for(result=result||{_t:"a"},index=commonHead;index<len1-commonTail;index++)arrayIndexOf(seq.indices1,index-commonHead)<0&&(result["_"+index]=[array1[index],0,0],removedItems.push(index));var detectMove=!0;context.options&&context.options.arrays&&!1===context.options.arrays.detectMove&&(detectMove=!1);var includeValueOnMove=!1;context.options&&context.options.arrays&&context.options.arrays.includeValueOnMove&&(includeValueOnMove=!0);var removedItemsLength=removedItems.length;for(index=commonHead;index<len2-commonTail;index++){var indexOnArray2=arrayIndexOf(seq.indices2,index-commonHead);if(indexOnArray2<0){var isMove=!1;if(detectMove&&removedItemsLength>0)for(var removeItemIndex1=0;removeItemIndex1<removedItemsLength;removeItemIndex1++)if(matchItems(trimmed1,trimmed2,(index1=removedItems[removeItemIndex1])-commonHead,index-commonHead,matchContext)){result["_"+index1].splice(1,2,index,3),includeValueOnMove||(result["_"+index1][0]=""),index2=index,child=new DiffContext(context.left[index1],context.right[index2]),context.push(child,index2),removedItems.splice(removeItemIndex1,1),isMove=!0;break}isMove||(result[index]=[array2[index]])}else index1=seq.indices1[indexOnArray2]+commonHead,index2=seq.indices2[indexOnArray2]+commonHead,child=new DiffContext(context.left[index1],context.right[index2]),context.push(child,index2)}context.setResult(result).exit()}else{for(result=result||{_t:"a"},index=commonHead;index<len1-commonTail;index++)result["_"+index]=[array1[index],0,0];context.setResult(result).exit()}else{if(len1===len2)return void context.setResult(void 0).exit();for(result=result||{_t:"a"},index=commonHead;index<len2-commonTail;index++)result[index]=[array2[index]];context.setResult(result).exit()}}};diffFilter$1.filterName="arrays";var compare_numerically=function numerically(a,b){return a-b},compare_numericallyBy=function numericallyBy(name){return function(a,b){return a[name]-b[name]}},patchFilter$2=function nestedPatchFilter(context){if(context.nested&&"a"===context.delta._t){var index=void 0,index1=void 0,delta=context.delta,array=context.left,toRemove=[],toInsert=[],toModify=[];for(index in delta)if("_t"!==index)if("_"===index[0]){if(0!==delta[index][2]&&3!==delta[index][2])throw new Error("only removal or move can be applied at original array indices, invalid diff type: "+delta[index][2]);toRemove.push(parseInt(index.slice(1),10))}else 1===delta[index].length?toInsert.push({index:parseInt(index,10),value:delta[index][0]}):toModify.push({index:parseInt(index,10),delta:delta[index]});for(index=(toRemove=toRemove.sort(compare_numerically)).length-1;index>=0;index--){var indexDiff=delta["_"+(index1=toRemove[index])],removedValue=array.splice(index1,1)[0];3===indexDiff[2]&&toInsert.push({index:indexDiff[1],value:removedValue})}var toInsertLength=(toInsert=toInsert.sort(compare_numericallyBy("index"))).length;for(index=0;index<toInsertLength;index++){var insertion=toInsert[index];array.splice(insertion.index,0,insertion.value)}var toModifyLength=toModify.length,child=void 0;if(toModifyLength>0)for(index=0;index<toModifyLength;index++){var modification=toModify[index];child=new PatchContext(context.left[modification.index],modification.delta),context.push(child,modification.index)}context.children?context.exit():context.setResult(context.left).exit()}};patchFilter$2.filterName="arrays";var collectChildrenPatchFilter$1=function collectChildrenPatchFilter(context){if(context&&context.children&&"a"===context.delta._t){for(var length=context.children.length,child=void 0,index=0;index<length;index++)child=context.children[index],context.left[child.childName]=child.result;context.setResult(context.left).exit()}};collectChildrenPatchFilter$1.filterName="arraysCollectChildren";var reverseFilter$2=function arraysReverseFilter(context){if(context.nested){if("a"===context.delta._t){var name=void 0,child=void 0;for(name in context.delta)"_t"!==name&&(child=new ReverseContext(context.delta[name]),context.push(child,name));context.exit()}}else 3===context.delta[2]&&(context.newName="_"+context.delta[1],context.setResult([context.delta[0],parseInt(context.childName.substr(1),10),3]).exit())};reverseFilter$2.filterName="arrays";var reverseArrayDeltaIndex=function reverseArrayDeltaIndex(delta,index,itemDelta){if("string"==typeof index&&"_"===index[0])return parseInt(index.substr(1),10);if(isArray$2(itemDelta)&&0===itemDelta[2])return"_"+index;var reverseIndex=+index;for(var deltaIndex in delta){var deltaItem=delta[deltaIndex];if(isArray$2(deltaItem))if(3===deltaItem[2]){var moveFromIndex=parseInt(deltaIndex.substr(1),10),moveToIndex=deltaItem[1];if(moveToIndex===+index)return moveFromIndex;moveFromIndex<=reverseIndex&&moveToIndex>reverseIndex?reverseIndex++:moveFromIndex>=reverseIndex&&moveToIndex<reverseIndex&&reverseIndex--}else 0===deltaItem[2]?parseInt(deltaIndex.substr(1),10)<=reverseIndex&&reverseIndex++:1===deltaItem.length&&deltaIndex<=reverseIndex&&reverseIndex--}return reverseIndex};function collectChildrenReverseFilter$1(context){if(context&&context.children&&"a"===context.delta._t){for(var length=context.children.length,child=void 0,delta={_t:"a"},index=0;index<length;index++){var name=(child=context.children[index]).newName;void 0===name&&(name=reverseArrayDeltaIndex(context.delta,child.childName,child.result)),delta[name]!==child.result&&(delta[name]=child.result)}context.setResult(delta).exit()}}collectChildrenReverseFilter$1.filterName="arraysCollectChildren";var diffFilter$2=function datesDiffFilter(context){context.left instanceof Date?(context.right instanceof Date?context.left.getTime()!==context.right.getTime()?context.setResult([context.left,context.right]):context.setResult(void 0):context.setResult([context.left,context.right]),context.exit()):context.right instanceof Date&&context.setResult([context.left,context.right]).exit()};diffFilter$2.filterName="dates";var diffMatchPatch=function createCommonjsModule(fn,module){return fn(module={exports:{}},module.exports),module.exports}((function(module){function diff_match_patch(){this.Diff_Timeout=1,this.Diff_EditCost=4,this.Match_Threshold=.5,this.Match_Distance=1e3,this.Patch_DeleteThreshold=.5,this.Patch_Margin=4,this.Match_MaxBits=32}diff_match_patch.prototype.diff_main=function(text1,text2,opt_checklines,opt_deadline){void 0===opt_deadline&&(opt_deadline=this.Diff_Timeout<=0?Number.MAX_VALUE:(new Date).getTime()+1e3*this.Diff_Timeout);var deadline=opt_deadline;if(null==text1||null==text2)throw new Error("Null input. (diff_main)");if(text1==text2)return text1?[[0,text1]]:[];void 0===opt_checklines&&(opt_checklines=!0);var checklines=opt_checklines,commonlength=this.diff_commonPrefix(text1,text2),commonprefix=text1.substring(0,commonlength);text1=text1.substring(commonlength),text2=text2.substring(commonlength),commonlength=this.diff_commonSuffix(text1,text2);var commonsuffix=text1.substring(text1.length-commonlength);text1=text1.substring(0,text1.length-commonlength),text2=text2.substring(0,text2.length-commonlength);var diffs=this.diff_compute_(text1,text2,checklines,deadline);return commonprefix&&diffs.unshift([0,commonprefix]),commonsuffix&&diffs.push([0,commonsuffix]),this.diff_cleanupMerge(diffs),diffs},diff_match_patch.prototype.diff_compute_=function(text1,text2,checklines,deadline){var diffs;if(!text1)return[[1,text2]];if(!text2)return[[-1,text1]];var longtext=text1.length>text2.length?text1:text2,shorttext=text1.length>text2.length?text2:text1,i=longtext.indexOf(shorttext);if(-1!=i)return diffs=[[1,longtext.substring(0,i)],[0,shorttext],[1,longtext.substring(i+shorttext.length)]],text1.length>text2.length&&(diffs[0][0]=diffs[2][0]=-1),diffs;if(1==shorttext.length)return[[-1,text1],[1,text2]];var hm=this.diff_halfMatch_(text1,text2);if(hm){var text1_a=hm[0],text1_b=hm[1],text2_a=hm[2],text2_b=hm[3],mid_common=hm[4],diffs_a=this.diff_main(text1_a,text2_a,checklines,deadline),diffs_b=this.diff_main(text1_b,text2_b,checklines,deadline);return diffs_a.concat([[0,mid_common]],diffs_b)}return checklines&&text1.length>100&&text2.length>100?this.diff_lineMode_(text1,text2,deadline):this.diff_bisect_(text1,text2,deadline)},diff_match_patch.prototype.diff_lineMode_=function(text1,text2,deadline){text1=(a=this.diff_linesToChars_(text1,text2)).chars1,text2=a.chars2;var linearray=a.lineArray,diffs=this.diff_main(text1,text2,!1,deadline);this.diff_charsToLines_(diffs,linearray),this.diff_cleanupSemantic(diffs),diffs.push([0,""]);for(var pointer=0,count_delete=0,count_insert=0,text_delete="",text_insert="";pointer<diffs.length;){switch(diffs[pointer][0]){case 1:count_insert++,text_insert+=diffs[pointer][1];break;case-1:count_delete++,text_delete+=diffs[pointer][1];break;case 0:if(count_delete>=1&&count_insert>=1){diffs.splice(pointer-count_delete-count_insert,count_delete+count_insert),pointer=pointer-count_delete-count_insert;for(var a,j=(a=this.diff_main(text_delete,text_insert,!1,deadline)).length-1;j>=0;j--)diffs.splice(pointer,0,a[j]);pointer+=a.length}count_insert=0,count_delete=0,text_delete="",text_insert=""}pointer++}return diffs.pop(),diffs},diff_match_patch.prototype.diff_bisect_=function(text1,text2,deadline){for(var text1_length=text1.length,text2_length=text2.length,max_d=Math.ceil((text1_length+text2_length)/2),v_offset=max_d,v_length=2*max_d,v1=new Array(v_length),v2=new Array(v_length),x=0;x<v_length;x++)v1[x]=-1,v2[x]=-1;v1[v_offset+1]=0,v2[v_offset+1]=0;for(var delta=text1_length-text2_length,front=delta%2!=0,k1start=0,k1end=0,k2start=0,k2end=0,d=0;d<max_d&&!((new Date).getTime()>deadline);d++){for(var k1=-d+k1start;k1<=d-k1end;k1+=2){for(var k1_offset=v_offset+k1,y1=(x1=k1==-d||k1!=d&&v1[k1_offset-1]<v1[k1_offset+1]?v1[k1_offset+1]:v1[k1_offset-1]+1)-k1;x1<text1_length&&y1<text2_length&&text1.charAt(x1)==text2.charAt(y1);)x1++,y1++;if(v1[k1_offset]=x1,x1>text1_length)k1end+=2;else if(y1>text2_length)k1start+=2;else if(front&&(k2_offset=v_offset+delta-k1)>=0&&k2_offset<v_length&&-1!=v2[k2_offset]&&x1>=(x2=text1_length-v2[k2_offset]))return this.diff_bisectSplit_(text1,text2,x1,y1,deadline)}for(var k2=-d+k2start;k2<=d-k2end;k2+=2){for(var x2,k2_offset=v_offset+k2,y2=(x2=k2==-d||k2!=d&&v2[k2_offset-1]<v2[k2_offset+1]?v2[k2_offset+1]:v2[k2_offset-1]+1)-k2;x2<text1_length&&y2<text2_length&&text1.charAt(text1_length-x2-1)==text2.charAt(text2_length-y2-1);)x2++,y2++;if(v2[k2_offset]=x2,x2>text1_length)k2end+=2;else if(y2>text2_length)k2start+=2;else if(!front){var x1;if((k1_offset=v_offset+delta-k2)>=0&&k1_offset<v_length&&-1!=v1[k1_offset])if(y1=v_offset+(x1=v1[k1_offset])-k1_offset,x1>=(x2=text1_length-x2))return this.diff_bisectSplit_(text1,text2,x1,y1,deadline)}}}return[[-1,text1],[1,text2]]},diff_match_patch.prototype.diff_bisectSplit_=function(text1,text2,x,y,deadline){var text1a=text1.substring(0,x),text2a=text2.substring(0,y),text1b=text1.substring(x),text2b=text2.substring(y),diffs=this.diff_main(text1a,text2a,!1,deadline),diffsb=this.diff_main(text1b,text2b,!1,deadline);return diffs.concat(diffsb)},diff_match_patch.prototype.diff_linesToChars_=function(text1,text2){var lineArray=[],lineHash={};function diff_linesToCharsMunge_(text){for(var chars="",lineStart=0,lineEnd=-1,lineArrayLength=lineArray.length;lineEnd<text.length-1;){-1==(lineEnd=text.indexOf("\n",lineStart))&&(lineEnd=text.length-1);var line=text.substring(lineStart,lineEnd+1);lineStart=lineEnd+1,(lineHash.hasOwnProperty?lineHash.hasOwnProperty(line):void 0!==lineHash[line])?chars+=String.fromCharCode(lineHash[line]):(chars+=String.fromCharCode(lineArrayLength),lineHash[line]=lineArrayLength,lineArray[lineArrayLength++]=line)}return chars}return lineArray[0]="",{chars1:diff_linesToCharsMunge_(text1),chars2:diff_linesToCharsMunge_(text2),lineArray:lineArray}},diff_match_patch.prototype.diff_charsToLines_=function(diffs,lineArray){for(var x=0;x<diffs.length;x++){for(var chars=diffs[x][1],text=[],y=0;y<chars.length;y++)text[y]=lineArray[chars.charCodeAt(y)];diffs[x][1]=text.join("")}},diff_match_patch.prototype.diff_commonPrefix=function(text1,text2){if(!text1||!text2||text1.charAt(0)!=text2.charAt(0))return 0;for(var pointermin=0,pointermax=Math.min(text1.length,text2.length),pointermid=pointermax,pointerstart=0;pointermin<pointermid;)text1.substring(pointerstart,pointermid)==text2.substring(pointerstart,pointermid)?pointerstart=pointermin=pointermid:pointermax=pointermid,pointermid=Math.floor((pointermax-pointermin)/2+pointermin);return pointermid},diff_match_patch.prototype.diff_commonSuffix=function(text1,text2){if(!text1||!text2||text1.charAt(text1.length-1)!=text2.charAt(text2.length-1))return 0;for(var pointermin=0,pointermax=Math.min(text1.length,text2.length),pointermid=pointermax,pointerend=0;pointermin<pointermid;)text1.substring(text1.length-pointermid,text1.length-pointerend)==text2.substring(text2.length-pointermid,text2.length-pointerend)?pointerend=pointermin=pointermid:pointermax=pointermid,pointermid=Math.floor((pointermax-pointermin)/2+pointermin);return pointermid},diff_match_patch.prototype.diff_commonOverlap_=function(text1,text2){var text1_length=text1.length,text2_length=text2.length;if(0==text1_length||0==text2_length)return 0;text1_length>text2_length?text1=text1.substring(text1_length-text2_length):text1_length<text2_length&&(text2=text2.substring(0,text1_length));var text_length=Math.min(text1_length,text2_length);if(text1==text2)return text_length;for(var best=0,length=1;;){var pattern=text1.substring(text_length-length),found=text2.indexOf(pattern);if(-1==found)return best;length+=found,0!=found&&text1.substring(text_length-length)!=text2.substring(0,length)||(best=length,length++)}},diff_match_patch.prototype.diff_halfMatch_=function(text1,text2){if(this.Diff_Timeout<=0)return null;var longtext=text1.length>text2.length?text1:text2,shorttext=text1.length>text2.length?text2:text1;if(longtext.length<4||2*shorttext.length<longtext.length)return null;var dmp=this;function diff_halfMatchI_(longtext,shorttext,i){for(var best_longtext_a,best_longtext_b,best_shorttext_a,best_shorttext_b,seed=longtext.substring(i,i+Math.floor(longtext.length/4)),j=-1,best_common="";-1!=(j=shorttext.indexOf(seed,j+1));){var prefixLength=dmp.diff_commonPrefix(longtext.substring(i),shorttext.substring(j)),suffixLength=dmp.diff_commonSuffix(longtext.substring(0,i),shorttext.substring(0,j));best_common.length<suffixLength+prefixLength&&(best_common=shorttext.substring(j-suffixLength,j)+shorttext.substring(j,j+prefixLength),best_longtext_a=longtext.substring(0,i-suffixLength),best_longtext_b=longtext.substring(i+prefixLength),best_shorttext_a=shorttext.substring(0,j-suffixLength),best_shorttext_b=shorttext.substring(j+prefixLength))}return 2*best_common.length>=longtext.length?[best_longtext_a,best_longtext_b,best_shorttext_a,best_shorttext_b,best_common]:null}var hm,text1_a,text1_b,text2_a,text2_b,hm1=diff_halfMatchI_(longtext,shorttext,Math.ceil(longtext.length/4)),hm2=diff_halfMatchI_(longtext,shorttext,Math.ceil(longtext.length/2));return hm1||hm2?(hm=hm2?hm1&&hm1[4].length>hm2[4].length?hm1:hm2:hm1,text1.length>text2.length?(text1_a=hm[0],text1_b=hm[1],text2_a=hm[2],text2_b=hm[3]):(text2_a=hm[0],text2_b=hm[1],text1_a=hm[2],text1_b=hm[3]),[text1_a,text1_b,text2_a,text2_b,hm[4]]):null},diff_match_patch.prototype.diff_cleanupSemantic=function(diffs){for(var changes=!1,equalities=[],equalitiesLength=0,lastequality=null,pointer=0,length_insertions1=0,length_deletions1=0,length_insertions2=0,length_deletions2=0;pointer<diffs.length;)0==diffs[pointer][0]?(equalities[equalitiesLength++]=pointer,length_insertions1=length_insertions2,length_deletions1=length_deletions2,length_insertions2=0,length_deletions2=0,lastequality=diffs[pointer][1]):(1==diffs[pointer][0]?length_insertions2+=diffs[pointer][1].length:length_deletions2+=diffs[pointer][1].length,lastequality&&lastequality.length<=Math.max(length_insertions1,length_deletions1)&&lastequality.length<=Math.max(length_insertions2,length_deletions2)&&(diffs.splice(equalities[equalitiesLength-1],0,[-1,lastequality]),diffs[equalities[equalitiesLength-1]+1][0]=1,equalitiesLength--,pointer=--equalitiesLength>0?equalities[equalitiesLength-1]:-1,length_insertions1=0,length_deletions1=0,length_insertions2=0,length_deletions2=0,lastequality=null,changes=!0)),pointer++;for(changes&&this.diff_cleanupMerge(diffs),this.diff_cleanupSemanticLossless(diffs),pointer=1;pointer<diffs.length;){if(-1==diffs[pointer-1][0]&&1==diffs[pointer][0]){var deletion=diffs[pointer-1][1],insertion=diffs[pointer][1],overlap_length1=this.diff_commonOverlap_(deletion,insertion),overlap_length2=this.diff_commonOverlap_(insertion,deletion);overlap_length1>=overlap_length2?(overlap_length1>=deletion.length/2||overlap_length1>=insertion.length/2)&&(diffs.splice(pointer,0,[0,insertion.substring(0,overlap_length1)]),diffs[pointer-1][1]=deletion.substring(0,deletion.length-overlap_length1),diffs[pointer+1][1]=insertion.substring(overlap_length1),pointer++):(overlap_length2>=deletion.length/2||overlap_length2>=insertion.length/2)&&(diffs.splice(pointer,0,[0,deletion.substring(0,overlap_length2)]),diffs[pointer-1][0]=1,diffs[pointer-1][1]=insertion.substring(0,insertion.length-overlap_length2),diffs[pointer+1][0]=-1,diffs[pointer+1][1]=deletion.substring(overlap_length2),pointer++),pointer++}pointer++}},diff_match_patch.prototype.diff_cleanupSemanticLossless=function(diffs){function diff_cleanupSemanticScore_(one,two){if(!one||!two)return 6;var char1=one.charAt(one.length-1),char2=two.charAt(0),nonAlphaNumeric1=char1.match(diff_match_patch.nonAlphaNumericRegex_),nonAlphaNumeric2=char2.match(diff_match_patch.nonAlphaNumericRegex_),whitespace1=nonAlphaNumeric1&&char1.match(diff_match_patch.whitespaceRegex_),whitespace2=nonAlphaNumeric2&&char2.match(diff_match_patch.whitespaceRegex_),lineBreak1=whitespace1&&char1.match(diff_match_patch.linebreakRegex_),lineBreak2=whitespace2&&char2.match(diff_match_patch.linebreakRegex_),blankLine1=lineBreak1&&one.match(diff_match_patch.blanklineEndRegex_),blankLine2=lineBreak2&&two.match(diff_match_patch.blanklineStartRegex_);return blankLine1||blankLine2?5:lineBreak1||lineBreak2?4:nonAlphaNumeric1&&!whitespace1&&whitespace2?3:whitespace1||whitespace2?2:nonAlphaNumeric1||nonAlphaNumeric2?1:0}for(var pointer=1;pointer<diffs.length-1;){if(0==diffs[pointer-1][0]&&0==diffs[pointer+1][0]){var equality1=diffs[pointer-1][1],edit=diffs[pointer][1],equality2=diffs[pointer+1][1],commonOffset=this.diff_commonSuffix(equality1,edit);if(commonOffset){var commonString=edit.substring(edit.length-commonOffset);equality1=equality1.substring(0,equality1.length-commonOffset),edit=commonString+edit.substring(0,edit.length-commonOffset),equality2=commonString+equality2}for(var bestEquality1=equality1,bestEdit=edit,bestEquality2=equality2,bestScore=diff_cleanupSemanticScore_(equality1,edit)+diff_cleanupSemanticScore_(edit,equality2);edit.charAt(0)===equality2.charAt(0);){equality1+=edit.charAt(0),edit=edit.substring(1)+equality2.charAt(0),equality2=equality2.substring(1);var score=diff_cleanupSemanticScore_(equality1,edit)+diff_cleanupSemanticScore_(edit,equality2);score>=bestScore&&(bestScore=score,bestEquality1=equality1,bestEdit=edit,bestEquality2=equality2)}diffs[pointer-1][1]!=bestEquality1&&(bestEquality1?diffs[pointer-1][1]=bestEquality1:(diffs.splice(pointer-1,1),pointer--),diffs[pointer][1]=bestEdit,bestEquality2?diffs[pointer+1][1]=bestEquality2:(diffs.splice(pointer+1,1),pointer--))}pointer++}},diff_match_patch.nonAlphaNumericRegex_=/[^a-zA-Z0-9]/,diff_match_patch.whitespaceRegex_=/\s/,diff_match_patch.linebreakRegex_=/[\r\n]/,diff_match_patch.blanklineEndRegex_=/\n\r?\n$/,diff_match_patch.blanklineStartRegex_=/^\r?\n\r?\n/,diff_match_patch.prototype.diff_cleanupEfficiency=function(diffs){for(var changes=!1,equalities=[],equalitiesLength=0,lastequality=null,pointer=0,pre_ins=!1,pre_del=!1,post_ins=!1,post_del=!1;pointer<diffs.length;)0==diffs[pointer][0]?(diffs[pointer][1].length<this.Diff_EditCost&&(post_ins||post_del)?(equalities[equalitiesLength++]=pointer,pre_ins=post_ins,pre_del=post_del,lastequality=diffs[pointer][1]):(equalitiesLength=0,lastequality=null),post_ins=post_del=!1):(-1==diffs[pointer][0]?post_del=!0:post_ins=!0,lastequality&&(pre_ins&&pre_del&&post_ins&&post_del||lastequality.length<this.Diff_EditCost/2&&pre_ins+pre_del+post_ins+post_del==3)&&(diffs.splice(equalities[equalitiesLength-1],0,[-1,lastequality]),diffs[equalities[equalitiesLength-1]+1][0]=1,equalitiesLength--,lastequality=null,pre_ins&&pre_del?(post_ins=post_del=!0,equalitiesLength=0):(pointer=--equalitiesLength>0?equalities[equalitiesLength-1]:-1,post_ins=post_del=!1),changes=!0)),pointer++;changes&&this.diff_cleanupMerge(diffs)},diff_match_patch.prototype.diff_cleanupMerge=function(diffs){diffs.push([0,""]);for(var commonlength,pointer=0,count_delete=0,count_insert=0,text_delete="",text_insert="";pointer<diffs.length;)switch(diffs[pointer][0]){case 1:count_insert++,text_insert+=diffs[pointer][1],pointer++;break;case-1:count_delete++,text_delete+=diffs[pointer][1],pointer++;break;case 0:count_delete+count_insert>1?(0!==count_delete&&0!==count_insert&&(0!==(commonlength=this.diff_commonPrefix(text_insert,text_delete))&&(pointer-count_delete-count_insert>0&&0==diffs[pointer-count_delete-count_insert-1][0]?diffs[pointer-count_delete-count_insert-1][1]+=text_insert.substring(0,commonlength):(diffs.splice(0,0,[0,text_insert.substring(0,commonlength)]),pointer++),text_insert=text_insert.substring(commonlength),text_delete=text_delete.substring(commonlength)),0!==(commonlength=this.diff_commonSuffix(text_insert,text_delete))&&(diffs[pointer][1]=text_insert.substring(text_insert.length-commonlength)+diffs[pointer][1],text_insert=text_insert.substring(0,text_insert.length-commonlength),text_delete=text_delete.substring(0,text_delete.length-commonlength))),0===count_delete?diffs.splice(pointer-count_insert,count_delete+count_insert,[1,text_insert]):0===count_insert?diffs.splice(pointer-count_delete,count_delete+count_insert,[-1,text_delete]):diffs.splice(pointer-count_delete-count_insert,count_delete+count_insert,[-1,text_delete],[1,text_insert]),pointer=pointer-count_delete-count_insert+(count_delete?1:0)+(count_insert?1:0)+1):0!==pointer&&0==diffs[pointer-1][0]?(diffs[pointer-1][1]+=diffs[pointer][1],diffs.splice(pointer,1)):pointer++,count_insert=0,count_delete=0,text_delete="",text_insert=""}""===diffs[diffs.length-1][1]&&diffs.pop();var changes=!1;for(pointer=1;pointer<diffs.length-1;)0==diffs[pointer-1][0]&&0==diffs[pointer+1][0]&&(diffs[pointer][1].substring(diffs[pointer][1].length-diffs[pointer-1][1].length)==diffs[pointer-1][1]?(diffs[pointer][1]=diffs[pointer-1][1]+diffs[pointer][1].substring(0,diffs[pointer][1].length-diffs[pointer-1][1].length),diffs[pointer+1][1]=diffs[pointer-1][1]+diffs[pointer+1][1],diffs.splice(pointer-1,1),changes=!0):diffs[pointer][1].substring(0,diffs[pointer+1][1].length)==diffs[pointer+1][1]&&(diffs[pointer-1][1]+=diffs[pointer+1][1],diffs[pointer][1]=diffs[pointer][1].substring(diffs[pointer+1][1].length)+diffs[pointer+1][1],diffs.splice(pointer+1,1),changes=!0)),pointer++;changes&&this.diff_cleanupMerge(diffs)},diff_match_patch.prototype.diff_xIndex=function(diffs,loc){var x,chars1=0,chars2=0,last_chars1=0,last_chars2=0;for(x=0;x<diffs.length&&(1!==diffs[x][0]&&(chars1+=diffs[x][1].length),-1!==diffs[x][0]&&(chars2+=diffs[x][1].length),!(chars1>loc));x++)last_chars1=chars1,last_chars2=chars2;return diffs.length!=x&&-1===diffs[x][0]?last_chars2:last_chars2+(loc-last_chars1)},diff_match_patch.prototype.diff_prettyHtml=function(diffs){for(var html=[],pattern_amp=/&/g,pattern_lt=/</g,pattern_gt=/>/g,pattern_para=/\n/g,x=0;x<diffs.length;x++){var op=diffs[x][0],text=diffs[x][1].replace(pattern_amp,"&amp;").replace(pattern_lt,"&lt;").replace(pattern_gt,"&gt;").replace(pattern_para,"&para;<br>");switch(op){case 1:html[x]='<ins style="background:#e6ffe6;">'+text+"</ins>";break;case-1:html[x]='<del style="background:#ffe6e6;">'+text+"</del>";break;case 0:html[x]="<span>"+text+"</span>"}}return html.join("")},diff_match_patch.prototype.diff_text1=function(diffs){for(var text=[],x=0;x<diffs.length;x++)1!==diffs[x][0]&&(text[x]=diffs[x][1]);return text.join("")},diff_match_patch.prototype.diff_text2=function(diffs){for(var text=[],x=0;x<diffs.length;x++)-1!==diffs[x][0]&&(text[x]=diffs[x][1]);return text.join("")},diff_match_patch.prototype.diff_levenshtein=function(diffs){for(var levenshtein=0,insertions=0,deletions=0,x=0;x<diffs.length;x++){var op=diffs[x][0],data=diffs[x][1];switch(op){case 1:insertions+=data.length;break;case-1:deletions+=data.length;break;case 0:levenshtein+=Math.max(insertions,deletions),insertions=0,deletions=0}}return levenshtein+=Math.max(insertions,deletions)},diff_match_patch.prototype.diff_toDelta=function(diffs){for(var text=[],x=0;x<diffs.length;x++)switch(diffs[x][0]){case 1:text[x]="+"+encodeURI(diffs[x][1]);break;case-1:text[x]="-"+diffs[x][1].length;break;case 0:text[x]="="+diffs[x][1].length}return text.join("\t").replace(/%20/g," ")},diff_match_patch.prototype.diff_fromDelta=function(text1,delta){for(var diffs=[],diffsLength=0,pointer=0,tokens=delta.split(/\t/g),x=0;x<tokens.length;x++){var param=tokens[x].substring(1);switch(tokens[x].charAt(0)){case"+":try{diffs[diffsLength++]=[1,decodeURI(param)]}catch(ex){throw new Error("Illegal escape in diff_fromDelta: "+param)}break;case"-":case"=":var n=parseInt(param,10);if(isNaN(n)||n<0)throw new Error("Invalid number in diff_fromDelta: "+param);var text=text1.substring(pointer,pointer+=n);"="==tokens[x].charAt(0)?diffs[diffsLength++]=[0,text]:diffs[diffsLength++]=[-1,text];break;default:if(tokens[x])throw new Error("Invalid diff operation in diff_fromDelta: "+tokens[x])}}if(pointer!=text1.length)throw new Error("Delta length ("+pointer+") does not equal source text length ("+text1.length+").");return diffs},diff_match_patch.prototype.match_main=function(text,pattern,loc){if(null==text||null==pattern||null==loc)throw new Error("Null input. (match_main)");return loc=Math.max(0,Math.min(loc,text.length)),text==pattern?0:text.length?text.substring(loc,loc+pattern.length)==pattern?loc:this.match_bitap_(text,pattern,loc):-1},diff_match_patch.prototype.match_bitap_=function(text,pattern,loc){if(pattern.length>this.Match_MaxBits)throw new Error("Pattern too long for this browser.");var s=this.match_alphabet_(pattern),dmp=this;function match_bitapScore_(e,x){var accuracy=e/pattern.length,proximity=Math.abs(loc-x);return dmp.Match_Distance?accuracy+proximity/dmp.Match_Distance:proximity?1:accuracy}var score_threshold=this.Match_Threshold,best_loc=text.indexOf(pattern,loc);-1!=best_loc&&(score_threshold=Math.min(match_bitapScore_(0,best_loc),score_threshold),-1!=(best_loc=text.lastIndexOf(pattern,loc+pattern.length))&&(score_threshold=Math.min(match_bitapScore_(0,best_loc),score_threshold)));var bin_min,bin_mid,matchmask=1<<pattern.length-1;best_loc=-1;for(var last_rd,bin_max=pattern.length+text.length,d=0;d<pattern.length;d++){for(bin_min=0,bin_mid=bin_max;bin_min<bin_mid;)match_bitapScore_(d,loc+bin_mid)<=score_threshold?bin_min=bin_mid:bin_max=bin_mid,bin_mid=Math.floor((bin_max-bin_min)/2+bin_min);bin_max=bin_mid;var start=Math.max(1,loc-bin_mid+1),finish=Math.min(loc+bin_mid,text.length)+pattern.length,rd=Array(finish+2);rd[finish+1]=(1<<d)-1;for(var j=finish;j>=start;j--){var charMatch=s[text.charAt(j-1)];if(rd[j]=0===d?(rd[j+1]<<1|1)&charMatch:(rd[j+1]<<1|1)&charMatch|(last_rd[j+1]|last_rd[j])<<1|1|last_rd[j+1],rd[j]&matchmask){var score=match_bitapScore_(d,j-1);if(score<=score_threshold){if(score_threshold=score,!((best_loc=j-1)>loc))break;start=Math.max(1,2*loc-best_loc)}}}if(match_bitapScore_(d+1,loc)>score_threshold)break;last_rd=rd}return best_loc},diff_match_patch.prototype.match_alphabet_=function(pattern){for(var s={},i=0;i<pattern.length;i++)s[pattern.charAt(i)]=0;for(i=0;i<pattern.length;i++)s[pattern.charAt(i)]|=1<<pattern.length-i-1;return s},diff_match_patch.prototype.patch_addContext_=function(patch,text){if(0!=text.length){for(var pattern=text.substring(patch.start2,patch.start2+patch.length1),padding=0;text.indexOf(pattern)!=text.lastIndexOf(pattern)&&pattern.length<this.Match_MaxBits-this.Patch_Margin-this.Patch_Margin;)padding+=this.Patch_Margin,pattern=text.substring(patch.start2-padding,patch.start2+patch.length1+padding);padding+=this.Patch_Margin;var prefix=text.substring(patch.start2-padding,patch.start2);prefix&&patch.diffs.unshift([0,prefix]);var suffix=text.substring(patch.start2+patch.length1,patch.start2+patch.length1+padding);suffix&&patch.diffs.push([0,suffix]),patch.start1-=prefix.length,patch.start2-=prefix.length,patch.length1+=prefix.length+suffix.length,patch.length2+=prefix.length+suffix.length}},diff_match_patch.prototype.patch_make=function(a,opt_b,opt_c){var text1,diffs;if("string"==typeof a&&"string"==typeof opt_b&&void 0===opt_c)text1=a,(diffs=this.diff_main(text1,opt_b,!0)).length>2&&(this.diff_cleanupSemantic(diffs),this.diff_cleanupEfficiency(diffs));else if(a&&"object"==typeof a&&void 0===opt_b&&void 0===opt_c)diffs=a,text1=this.diff_text1(diffs);else if("string"==typeof a&&opt_b&&"object"==typeof opt_b&&void 0===opt_c)text1=a,diffs=opt_b;else{if("string"!=typeof a||"string"!=typeof opt_b||!opt_c||"object"!=typeof opt_c)throw new Error("Unknown call format to patch_make.");text1=a,diffs=opt_c}if(0===diffs.length)return[];for(var patches=[],patch=new diff_match_patch.patch_obj,patchDiffLength=0,char_count1=0,char_count2=0,prepatch_text=text1,postpatch_text=text1,x=0;x<diffs.length;x++){var diff_type=diffs[x][0],diff_text=diffs[x][1];switch(patchDiffLength||0===diff_type||(patch.start1=char_count1,patch.start2=char_count2),diff_type){case 1:patch.diffs[patchDiffLength++]=diffs[x],patch.length2+=diff_text.length,postpatch_text=postpatch_text.substring(0,char_count2)+diff_text+postpatch_text.substring(char_count2);break;case-1:patch.length1+=diff_text.length,patch.diffs[patchDiffLength++]=diffs[x],postpatch_text=postpatch_text.substring(0,char_count2)+postpatch_text.substring(char_count2+diff_text.length);break;case 0:diff_text.length<=2*this.Patch_Margin&&patchDiffLength&&diffs.length!=x+1?(patch.diffs[patchDiffLength++]=diffs[x],patch.length1+=diff_text.length,patch.length2+=diff_text.length):diff_text.length>=2*this.Patch_Margin&&patchDiffLength&&(this.patch_addContext_(patch,prepatch_text),patches.push(patch),patch=new diff_match_patch.patch_obj,patchDiffLength=0,prepatch_text=postpatch_text,char_count1=char_count2)}1!==diff_type&&(char_count1+=diff_text.length),-1!==diff_type&&(char_count2+=diff_text.length)}return patchDiffLength&&(this.patch_addContext_(patch,prepatch_text),patches.push(patch)),patches},diff_match_patch.prototype.patch_deepCopy=function(patches){for(var patchesCopy=[],x=0;x<patches.length;x++){var patch=patches[x],patchCopy=new diff_match_patch.patch_obj;patchCopy.diffs=[];for(var y=0;y<patch.diffs.length;y++)patchCopy.diffs[y]=patch.diffs[y].slice();patchCopy.start1=patch.start1,patchCopy.start2=patch.start2,patchCopy.length1=patch.length1,patchCopy.length2=patch.length2,patchesCopy[x]=patchCopy}return patchesCopy},diff_match_patch.prototype.patch_apply=function(patches,text){if(0==patches.length)return[text,[]];patches=this.patch_deepCopy(patches);var nullPadding=this.patch_addPadding(patches);text=nullPadding+text+nullPadding,this.patch_splitMax(patches);for(var delta=0,results=[],x=0;x<patches.length;x++){var start_loc,text2,expected_loc=patches[x].start2+delta,text1=this.diff_text1(patches[x].diffs),end_loc=-1;if(text1.length>this.Match_MaxBits?-1!=(start_loc=this.match_main(text,text1.substring(0,this.Match_MaxBits),expected_loc))&&(-1==(end_loc=this.match_main(text,text1.substring(text1.length-this.Match_MaxBits),expected_loc+text1.length-this.Match_MaxBits))||start_loc>=end_loc)&&(start_loc=-1):start_loc=this.match_main(text,text1,expected_loc),-1==start_loc)results[x]=!1,delta-=patches[x].length2-patches[x].length1;else if(results[x]=!0,delta=start_loc-expected_loc,text1==(text2=-1==end_loc?text.substring(start_loc,start_loc+text1.length):text.substring(start_loc,end_loc+this.Match_MaxBits)))text=text.substring(0,start_loc)+this.diff_text2(patches[x].diffs)+text.substring(start_loc+text1.length);else{var diffs=this.diff_main(text1,text2,!1);if(text1.length>this.Match_MaxBits&&this.diff_levenshtein(diffs)/text1.length>this.Patch_DeleteThreshold)results[x]=!1;else{this.diff_cleanupSemanticLossless(diffs);for(var index2,index1=0,y=0;y<patches[x].diffs.length;y++){var mod=patches[x].diffs[y];0!==mod[0]&&(index2=this.diff_xIndex(diffs,index1)),1===mod[0]?text=text.substring(0,start_loc+index2)+mod[1]+text.substring(start_loc+index2):-1===mod[0]&&(text=text.substring(0,start_loc+index2)+text.substring(start_loc+this.diff_xIndex(diffs,index1+mod[1].length))),-1!==mod[0]&&(index1+=mod[1].length)}}}}return[text=text.substring(nullPadding.length,text.length-nullPadding.length),results]},diff_match_patch.prototype.patch_addPadding=function(patches){for(var paddingLength=this.Patch_Margin,nullPadding="",x=1;x<=paddingLength;x++)nullPadding+=String.fromCharCode(x);for(x=0;x<patches.length;x++)patches[x].start1+=paddingLength,patches[x].start2+=paddingLength;var patch=patches[0],diffs=patch.diffs;if(0==diffs.length||0!=diffs[0][0])diffs.unshift([0,nullPadding]),patch.start1-=paddingLength,patch.start2-=paddingLength,patch.length1+=paddingLength,patch.length2+=paddingLength;else if(paddingLength>diffs[0][1].length){var extraLength=paddingLength-diffs[0][1].length;diffs[0][1]=nullPadding.substring(diffs[0][1].length)+diffs[0][1],patch.start1-=extraLength,patch.start2-=extraLength,patch.length1+=extraLength,patch.length2+=extraLength}return 0==(diffs=(patch=patches[patches.length-1]).diffs).length||0!=diffs[diffs.length-1][0]?(diffs.push([0,nullPadding]),patch.length1+=paddingLength,patch.length2+=paddingLength):paddingLength>diffs[diffs.length-1][1].length&&(extraLength=paddingLength-diffs[diffs.length-1][1].length,diffs[diffs.length-1][1]+=nullPadding.substring(0,extraLength),patch.length1+=extraLength,patch.length2+=extraLength),nullPadding},diff_match_patch.prototype.patch_splitMax=function(patches){for(var patch_size=this.Match_MaxBits,x=0;x<patches.length;x++)if(!(patches[x].length1<=patch_size)){var bigpatch=patches[x];patches.splice(x--,1);for(var start1=bigpatch.start1,start2=bigpatch.start2,precontext="";0!==bigpatch.diffs.length;){var patch=new diff_match_patch.patch_obj,empty=!0;for(patch.start1=start1-precontext.length,patch.start2=start2-precontext.length,""!==precontext&&(patch.length1=patch.length2=precontext.length,patch.diffs.push([0,precontext]));0!==bigpatch.diffs.length&&patch.length1<patch_size-this.Patch_Margin;){var diff_type=bigpatch.diffs[0][0],diff_text=bigpatch.diffs[0][1];1===diff_type?(patch.length2+=diff_text.length,start2+=diff_text.length,patch.diffs.push(bigpatch.diffs.shift()),empty=!1):-1===diff_type&&1==patch.diffs.length&&0==patch.diffs[0][0]&&diff_text.length>2*patch_size?(patch.length1+=diff_text.length,start1+=diff_text.length,empty=!1,patch.diffs.push([diff_type,diff_text]),bigpatch.diffs.shift()):(diff_text=diff_text.substring(0,patch_size-patch.length1-this.Patch_Margin),patch.length1+=diff_text.length,start1+=diff_text.length,0===diff_type?(patch.length2+=diff_text.length,start2+=diff_text.length):empty=!1,patch.diffs.push([diff_type,diff_text]),diff_text==bigpatch.diffs[0][1]?bigpatch.diffs.shift():bigpatch.diffs[0][1]=bigpatch.diffs[0][1].substring(diff_text.length))}precontext=(precontext=this.diff_text2(patch.diffs)).substring(precontext.length-this.Patch_Margin);var postcontext=this.diff_text1(bigpatch.diffs).substring(0,this.Patch_Margin);""!==postcontext&&(patch.length1+=postcontext.length,patch.length2+=postcontext.length,0!==patch.diffs.length&&0===patch.diffs[patch.diffs.length-1][0]?patch.diffs[patch.diffs.length-1][1]+=postcontext:patch.diffs.push([0,postcontext])),empty||patches.splice(++x,0,patch)}}},diff_match_patch.prototype.patch_toText=function(patches){for(var text=[],x=0;x<patches.length;x++)text[x]=patches[x];return text.join("")},diff_match_patch.prototype.patch_fromText=function(textline){var patches=[];if(!textline)return patches;for(var text=textline.split("\n"),textPointer=0,patchHeader=/^@@ -(\d+),?(\d*) \+(\d+),?(\d*) @@$/;textPointer<text.length;){var m=text[textPointer].match(patchHeader);if(!m)throw new Error("Invalid patch string: "+text[textPointer]);var patch=new diff_match_patch.patch_obj;for(patches.push(patch),patch.start1=parseInt(m[1],10),""===m[2]?(patch.start1--,patch.length1=1):"0"==m[2]?patch.length1=0:(patch.start1--,patch.length1=parseInt(m[2],10)),patch.start2=parseInt(m[3],10),""===m[4]?(patch.start2--,patch.length2=1):"0"==m[4]?patch.length2=0:(patch.start2--,patch.length2=parseInt(m[4],10)),textPointer++;textPointer<text.length;){var sign=text[textPointer].charAt(0);try{var line=decodeURI(text[textPointer].substring(1))}catch(ex){throw new Error("Illegal escape in patch_fromText: "+line)}if("-"==sign)patch.diffs.push([-1,line]);else if("+"==sign)patch.diffs.push([1,line]);else if(" "==sign)patch.diffs.push([0,line]);else{if("@"==sign)break;if(""!==sign)throw new Error('Invalid patch mode "'+sign+'" in: '+line)}textPointer++}}return patches},diff_match_patch.patch_obj=function(){this.diffs=[],this.start1=null,this.start2=null,this.length1=0,this.length2=0},diff_match_patch.patch_obj.prototype.toString=function(){for(var op,text=["@@ -"+(0===this.length1?this.start1+",0":1==this.length1?this.start1+1:this.start1+1+","+this.length1)+" +"+(0===this.length2?this.start2+",0":1==this.length2?this.start2+1:this.start2+1+","+this.length2)+" @@\n"],x=0;x<this.diffs.length;x++){switch(this.diffs[x][0]){case 1:op="+";break;case-1:op="-";break;case 0:op=" "}text[x+1]=op+encodeURI(this.diffs[x][1])+"\n"}return text.join("").replace(/%20/g," ")},module.exports=diff_match_patch,module.exports.diff_match_patch=diff_match_patch,module.exports.DIFF_DELETE=-1,module.exports.DIFF_INSERT=1,module.exports.DIFF_EQUAL=0})),cachedDiffPatch=null,getDiffMatchPatch=function getDiffMatchPatch(required){if(!cachedDiffPatch){var instance=void 0;if("undefined"!=typeof diff_match_patch)instance="function"==typeof diff_match_patch?new diff_match_patch:new diff_match_patch.diff_match_patch;else if(diffMatchPatch)try{instance=diffMatchPatch&&new diffMatchPatch}catch(err){instance=null}if(!instance){if(!required)return null;var error=new Error("text diff_match_patch library not found");throw error.diff_match_patch_not_found=!0,error}cachedDiffPatch={diff:function diff(txt1,txt2){return instance.patch_toText(instance.patch_make(txt1,txt2))},patch:function patch(txt1,_patch){for(var results=instance.patch_apply(instance.patch_fromText(_patch),txt1),i=0;i<results[1].length;i++)results[1][i]||(new Error("text patch failed").textPatchFailed=!0);return results[0]}}}return cachedDiffPatch},diffFilter$3=function textsDiffFilter(context){if("string"===context.leftType){var minLength=context.options&&context.options.textDiff&&context.options.textDiff.minLength||60;if(context.left.length<minLength||context.right.length<minLength)context.setResult([context.left,context.right]).exit();else{var diffMatchPatch$$1=getDiffMatchPatch();if(diffMatchPatch$$1){var diff=diffMatchPatch$$1.diff;context.setResult([diff(context.left,context.right),0,2]).exit()}else context.setResult([context.left,context.right]).exit()}}};diffFilter$3.filterName="texts";var patchFilter$3=function textsPatchFilter(context){if(!context.nested&&2===context.delta[2]){var patch=getDiffMatchPatch(!0).patch;context.setResult(patch(context.left,context.delta[0])).exit()}};patchFilter$3.filterName="texts";var textDeltaReverse=function textDeltaReverse(delta){var l,i=void 0,lines=void 0,line=void 0,lineTmp=void 0,header=null,headerRegex=/^@@ +-(\d+),(\d+) +\+(\d+),(\d+) +@@$/;for(i=0,l=(lines=delta.split("\n")).length;i<l;i++){var lineStart=(line=lines[i]).slice(0,1);"@"===lineStart?(header=headerRegex.exec(line),lines[i]="@@ -"+header[3]+","+header[4]+" +"+header[1]+","+header[2]+" @@"):"+"===lineStart?(lines[i]="-"+lines[i].slice(1),"+"===lines[i-1].slice(0,1)&&(lineTmp=lines[i],lines[i]=lines[i-1],lines[i-1]=lineTmp)):"-"===lineStart&&(lines[i]="+"+lines[i].slice(1))}return lines.join("\n")},reverseFilter$3=function textsReverseFilter(context){context.nested||2===context.delta[2]&&context.setResult([textDeltaReverse(context.delta[0]),0,2]).exit()};reverseFilter$3.filterName="texts";var DiffPatcher=function(){function DiffPatcher(options){classCallCheck(this,DiffPatcher),this.processor=new Processor(options),this.processor.pipe(new Pipe("diff").append(collectChildrenDiffFilter,diffFilter,diffFilter$2,diffFilter$3,objectsDiffFilter,diffFilter$1).shouldHaveResult()),this.processor.pipe(new Pipe("patch").append(collectChildrenPatchFilter,collectChildrenPatchFilter$1,patchFilter,patchFilter$3,patchFilter$1,patchFilter$2).shouldHaveResult()),this.processor.pipe(new Pipe("reverse").append(collectChildrenReverseFilter,collectChildrenReverseFilter$1,reverseFilter,reverseFilter$3,reverseFilter$1,reverseFilter$2).shouldHaveResult())}return createClass(DiffPatcher,[{key:"options",value:function options(){var _processor;return(_processor=this.processor).options.apply(_processor,arguments)}},{key:"diff",value:function diff(left,right){return this.processor.process(new DiffContext(left,right))}},{key:"patch",value:function patch(left,delta){return this.processor.process(new PatchContext(left,delta))}},{key:"reverse",value:function reverse(delta){return this.processor.process(new ReverseContext(delta))}},{key:"unpatch",value:function unpatch(right,delta){return this.patch(right,this.reverse(delta))}},{key:"clone",value:function clone$$1(value){return clone(value)}}]),DiffPatcher}(),isArray$3="function"==typeof Array.isArray?Array.isArray:function(a){return a instanceof Array},getObjectKeys="function"==typeof Object.keys?function(obj){return Object.keys(obj)}:function(obj){var names=[];for(var property in obj)Object.prototype.hasOwnProperty.call(obj,property)&&names.push(property);return names},trimUnderscore=function trimUnderscore(str){return"_"===str.substr(0,1)?str.slice(1):str},arrayKeyToSortNumber=function arrayKeyToSortNumber(key){return"_t"===key?-1:"_"===key.substr(0,1)?parseInt(key.slice(1),10):parseInt(key,10)+.1},arrayKeyComparer=function arrayKeyComparer(key1,key2){return arrayKeyToSortNumber(key1)-arrayKeyToSortNumber(key2)},BaseFormatter=function(){function BaseFormatter(){classCallCheck(this,BaseFormatter)}return createClass(BaseFormatter,[{key:"format",value:function format(delta,left){var context={};return this.prepareContext(context),this.recurse(context,delta,left),this.finalize(context)}},{key:"prepareContext",value:function prepareContext(context){context.buffer=[],context.out=function(){var _buffer;(_buffer=this.buffer).push.apply(_buffer,arguments)}}},{key:"typeFormattterNotFound",value:function typeFormattterNotFound(context,deltaType){throw new Error("cannot format delta type: "+deltaType)}},{key:"typeFormattterErrorFormatter",value:function typeFormattterErrorFormatter(context,err){return err.toString()}},{key:"finalize",value:function finalize(_ref){var buffer=_ref.buffer;if(isArray$3(buffer))return buffer.join("")}},{key:"recurse",value:function recurse(context,delta,left,key,leftKey,movedFrom,isLast){var leftValue=delta&&movedFrom?movedFrom.value:left;if(void 0!==delta||void 0!==key){var type=this.getDeltaType(delta,movedFrom),nodeType="node"===type?"a"===delta._t?"array":"object":"";void 0!==key?this.nodeBegin(context,key,leftKey,type,nodeType,isLast):this.rootBegin(context,type,nodeType);try{(this["format_"+type]||this.typeFormattterNotFound(context,type)).call(this,context,delta,leftValue,key,leftKey,movedFrom)}catch(err){this.typeFormattterErrorFormatter(context,err,delta,leftValue,key,leftKey,movedFrom),"undefined"!=typeof console&&console.error&&console.error(err.stack)}void 0!==key?this.nodeEnd(context,key,leftKey,type,nodeType,isLast):this.rootEnd(context,type,nodeType)}}},{key:"formatDeltaChildren",value:function formatDeltaChildren(context,delta,left){var self=this;this.forEachDeltaKey(delta,left,(function(key,leftKey,movedFrom,isLast){self.recurse(context,delta[key],left?left[leftKey]:void 0,key,leftKey,movedFrom,isLast)}))}},{key:"forEachDeltaKey",value:function forEachDeltaKey(delta,left,fn){var keys=getObjectKeys(delta),arrayKeys="a"===delta._t,moveDestinations={},name=void 0;if(void 0!==left)for(name in left)Object.prototype.hasOwnProperty.call(left,name)&&(void 0!==delta[name]||arrayKeys&&void 0!==delta["_"+name]||keys.push(name));for(name in delta)if(Object.prototype.hasOwnProperty.call(delta,name)){var value=delta[name];isArray$3(value)&&3===value[2]&&(moveDestinations[value[1].toString()]={key:name,value:left&&left[parseInt(name.substr(1))]},!1!==this.includeMoveDestinations&&void 0===left&&void 0===delta[value[1]]&&keys.push(value[1].toString()))}arrayKeys?keys.sort(arrayKeyComparer):keys.sort();for(var index=0,length=keys.length;index<length;index++){var key=keys[index];if(!arrayKeys||"_t"!==key){var leftKey=arrayKeys?"number"==typeof key?key:parseInt(trimUnderscore(key),10):key,isLast=index===length-1;fn(key,leftKey,moveDestinations[leftKey],isLast)}}}},{key:"getDeltaType",value:function getDeltaType(delta,movedFrom){if(void 0===delta)return void 0!==movedFrom?"movedestination":"unchanged";if(isArray$3(delta)){if(1===delta.length)return"added";if(2===delta.length)return"modified";if(3===delta.length&&0===delta[2])return"deleted";if(3===delta.length&&2===delta[2])return"textdiff";if(3===delta.length&&3===delta[2])return"moved"}else if("object"===(void 0===delta?"undefined":_typeof(delta)))return"node";return"unknown"}},{key:"parseTextDiff",value:function parseTextDiff(value){for(var output=[],lines=value.split("\n@@ "),i=0,l=lines.length;i<l;i++){var line=lines[i],lineOutput={pieces:[]},location=/^(?:@@ )?[-+]?(\d+),(\d+)/.exec(line).slice(1);lineOutput.location={line:location[0],chr:location[1]};for(var pieces=line.split("\n").slice(1),pieceIndex=0,piecesLength=pieces.length;pieceIndex<piecesLength;pieceIndex++){var piece=pieces[pieceIndex];if(piece.length){var pieceOutput={type:"context"};"+"===piece.substr(0,1)?pieceOutput.type="added":"-"===piece.substr(0,1)&&(pieceOutput.type="deleted"),pieceOutput.text=piece.slice(1),lineOutput.pieces.push(pieceOutput)}}output.push(lineOutput)}return output}}]),BaseFormatter}(),base=Object.freeze({default:BaseFormatter}),HtmlFormatter=function(_BaseFormatter){function HtmlFormatter(){return classCallCheck(this,HtmlFormatter),possibleConstructorReturn(this,(HtmlFormatter.__proto__||Object.getPrototypeOf(HtmlFormatter)).apply(this,arguments))}return inherits(HtmlFormatter,_BaseFormatter),createClass(HtmlFormatter,[{key:"typeFormattterErrorFormatter",value:function typeFormattterErrorFormatter(context,err){context.out('<pre class="jsondiffpatch-error">'+err+"</pre>")}},{key:"formatValue",value:function formatValue(context,value){context.out("<pre>"+htmlEscape(JSON.stringify(value,null,2))+"</pre>")}},{key:"formatTextDiffString",value:function formatTextDiffString(context,value){var lines=this.parseTextDiff(value);context.out('<ul class="jsondiffpatch-textdiff">');for(var i=0,l=lines.length;i<l;i++){var line=lines[i];context.out('<li><div class="jsondiffpatch-textdiff-location"><span class="jsondiffpatch-textdiff-line-number">'+line.location.line+'</span><span class="jsondiffpatch-textdiff-char">'+line.location.chr+'</span></div><div class="jsondiffpatch-textdiff-line">');for(var pieces=line.pieces,pieceIndex=0,piecesLength=pieces.length;pieceIndex<piecesLength;pieceIndex++){var piece=pieces[pieceIndex];context.out('<span class="jsondiffpatch-textdiff-'+piece.type+'">'+htmlEscape(decodeURI(piece.text))+"</span>")}context.out("</div></li>")}context.out("</ul>")}},{key:"rootBegin",value:function rootBegin(context,type,nodeType){var nodeClass="jsondiffpatch-"+type+(nodeType?" jsondiffpatch-child-node-type-"+nodeType:"");context.out('<div class="jsondiffpatch-delta '+nodeClass+'">')}},{key:"rootEnd",value:function rootEnd(context){context.out("</div>"+(context.hasArrows?'<script type="text/javascript">setTimeout('+adjustArrows.toString()+",10);<\/script>":""))}},{key:"nodeBegin",value:function nodeBegin(context,key,leftKey,type,nodeType){var nodeClass="jsondiffpatch-"+type+(nodeType?" jsondiffpatch-child-node-type-"+nodeType:"");context.out('<li class="'+nodeClass+'" data-key="'+leftKey+'"><div class="jsondiffpatch-property-name">'+leftKey+"</div>")}},{key:"nodeEnd",value:function nodeEnd(context){context.out("</li>")}},{key:"format_unchanged",value:function format_unchanged(context,delta,left){void 0!==left&&(context.out('<div class="jsondiffpatch-value">'),this.formatValue(context,left),context.out("</div>"))}},{key:"format_movedestination",value:function format_movedestination(context,delta,left){void 0!==left&&(context.out('<div class="jsondiffpatch-value">'),this.formatValue(context,left),context.out("</div>"))}},{key:"format_node",value:function format_node(context,delta,left){var nodeType="a"===delta._t?"array":"object";context.out('<ul class="jsondiffpatch-node jsondiffpatch-node-type-'+nodeType+'">'),this.formatDeltaChildren(context,delta,left),context.out("</ul>")}},{key:"format_added",value:function format_added(context,delta){context.out('<div class="jsondiffpatch-value">'),this.formatValue(context,delta[0]),context.out("</div>")}},{key:"format_modified",value:function format_modified(context,delta){context.out('<div class="jsondiffpatch-value jsondiffpatch-left-value">'),this.formatValue(context,delta[0]),context.out('</div><div class="jsondiffpatch-value jsondiffpatch-right-value">'),this.formatValue(context,delta[1]),context.out("</div>")}},{key:"format_deleted",value:function format_deleted(context,delta){context.out('<div class="jsondiffpatch-value">'),this.formatValue(context,delta[0]),context.out("</div>")}},{key:"format_moved",value:function format_moved(context,delta){context.out('<div class="jsondiffpatch-value">'),this.formatValue(context,delta[0]),context.out('</div><div class="jsondiffpatch-moved-destination">'+delta[1]+"</div>"),context.out('<div class="jsondiffpatch-arrow" style="position: relative; left: -34px;">\n          <svg width="30" height="60" style="position: absolute; display: none;">\n          <defs>\n              <marker id="markerArrow" markerWidth="8" markerHeight="8"\n                 refx="2" refy="4"\n                     orient="auto" markerUnits="userSpaceOnUse">\n                  <path d="M1,1 L1,7 L7,4 L1,1" style="fill: #339;" />\n              </marker>\n          </defs>\n          <path d="M30,0 Q-10,25 26,50"\n            style="stroke: #88f; stroke-width: 2px; fill: none; stroke-opacity: 0.5; marker-end: url(#markerArrow);"\n          ></path>\n          </svg>\n      </div>'),context.hasArrows=!0}},{key:"format_textdiff",value:function format_textdiff(context,delta){context.out('<div class="jsondiffpatch-value">'),this.formatTextDiffString(context,delta[0]),context.out("</div>")}}]),HtmlFormatter}(BaseFormatter);function htmlEscape(text){for(var html=text,replacements=[[/&/g,"&amp;"],[/</g,"&lt;"],[/>/g,"&gt;"],[/'/g,"&apos;"],[/"/g,"&quot;"]],i=0;i<replacements.length;i++)html=html.replace(replacements[i][0],replacements[i][1]);return html}var adjustArrows=function jsondiffpatchHtmlFormatterAdjustArrows(nodeArg){var node=nodeArg||document;!function eachByQuery(el,query,fn){for(var elems=el.querySelectorAll(query),i=0,l=elems.length;i<l;i++)fn(elems[i])}(node,".jsondiffpatch-arrow",(function(_ref3){var parentNode=_ref3.parentNode,children=_ref3.children,style=_ref3.style,arrowParent=parentNode,svg=children[0],path=svg.children[1];svg.style.display="none";var destination=function getElementText(_ref){var textContent=_ref.textContent,innerText=_ref.innerText;return textContent||innerText}(arrowParent.querySelector(".jsondiffpatch-moved-destination")),container=arrowParent.parentNode,destinationElem=void 0;if(function eachChildren(_ref2,fn){for(var children=_ref2.children,i=0,l=children.length;i<l;i++)fn(children[i],i)}(container,(function(child){child.getAttribute("data-key")===destination&&(destinationElem=child)})),destinationElem)try{var distance=destinationElem.offsetTop-arrowParent.offsetTop;svg.setAttribute("height",Math.abs(distance)+6),style.top=-8+(distance>0?0:distance)+"px";var curve=distance>0?"M30,0 Q-10,"+Math.round(distance/2)+" 26,"+(distance-4):"M30,"+-distance+" Q-10,"+Math.round(-distance/2)+" 26,4";path.setAttribute("d",curve),svg.style.display=""}catch(err){}}))},showUnchanged=function showUnchanged(show,node,delay){var el=node||document.body,prefix="jsondiffpatch-unchanged-",classes={showing:prefix+"showing",hiding:prefix+"hiding",visible:prefix+"visible",hidden:prefix+"hidden"},list=el.classList;if(list){if(!delay)return list.remove(classes.showing),list.remove(classes.hiding),list.remove(classes.visible),list.remove(classes.hidden),void(!1===show&&list.add(classes.hidden));!1===show?(list.remove(classes.showing),list.add(classes.visible),setTimeout((function(){list.add(classes.hiding)}),10)):(list.remove(classes.hiding),list.add(classes.showing),list.remove(classes.hidden));var intervalId=setInterval((function(){adjustArrows(el)}),100);setTimeout((function(){list.remove(classes.showing),list.remove(classes.hiding),!1===show?(list.add(classes.hidden),list.remove(classes.visible)):(list.add(classes.visible),list.remove(classes.hidden)),setTimeout((function(){list.remove(classes.visible),clearInterval(intervalId)}),delay+400)}),delay)}},defaultInstance=void 0,html=Object.freeze({showUnchanged:showUnchanged,hideUnchanged:function hideUnchanged(node,delay){return showUnchanged(!1,node,delay)},default:HtmlFormatter,format:function format(delta,left){return defaultInstance||(defaultInstance=new HtmlFormatter),defaultInstance.format(delta,left)}}),AnnotatedFormatter=function(_BaseFormatter){function AnnotatedFormatter(){classCallCheck(this,AnnotatedFormatter);var _this=possibleConstructorReturn(this,(AnnotatedFormatter.__proto__||Object.getPrototypeOf(AnnotatedFormatter)).call(this));return _this.includeMoveDestinations=!1,_this}return inherits(AnnotatedFormatter,_BaseFormatter),createClass(AnnotatedFormatter,[{key:"prepareContext",value:function prepareContext(context){get(AnnotatedFormatter.prototype.__proto__||Object.getPrototypeOf(AnnotatedFormatter.prototype),"prepareContext",this).call(this,context),context.indent=function(levels){this.indentLevel=(this.indentLevel||0)+(void 0===levels?1:levels),this.indentPad=new Array(this.indentLevel+1).join("&nbsp;&nbsp;")},context.row=function(json,htmlNote){context.out('<tr><td style="white-space: nowrap;"><pre class="jsondiffpatch-annotated-indent" style="display: inline-block">'),context.out(context.indentPad),context.out('</pre><pre style="display: inline-block">'),context.out(json),context.out('</pre></td><td class="jsondiffpatch-delta-note"><div>'),context.out(htmlNote),context.out("</div></td></tr>")}}},{key:"typeFormattterErrorFormatter",value:function typeFormattterErrorFormatter(context,err){context.row("",'<pre class="jsondiffpatch-error">'+err+"</pre>")}},{key:"formatTextDiffString",value:function formatTextDiffString(context,value){var lines=this.parseTextDiff(value);context.out('<ul class="jsondiffpatch-textdiff">');for(var i=0,l=lines.length;i<l;i++){var line=lines[i];context.out('<li><div class="jsondiffpatch-textdiff-location"><span class="jsondiffpatch-textdiff-line-number">'+line.location.line+'</span><span class="jsondiffpatch-textdiff-char">'+line.location.chr+'</span></div><div class="jsondiffpatch-textdiff-line">');for(var pieces=line.pieces,pieceIndex=0,piecesLength=pieces.length;pieceIndex<piecesLength;pieceIndex++){var piece=pieces[pieceIndex];context.out('<span class="jsondiffpatch-textdiff-'+piece.type+'">'+piece.text+"</span>")}context.out("</div></li>")}context.out("</ul>")}},{key:"rootBegin",value:function rootBegin(context,type,nodeType){context.out('<table class="jsondiffpatch-annotated-delta">'),"node"===type&&(context.row("{"),context.indent()),"array"===nodeType&&context.row('"_t": "a",',"Array delta (member names indicate array indices)")}},{key:"rootEnd",value:function rootEnd(context,type){"node"===type&&(context.indent(-1),context.row("}")),context.out("</table>")}},{key:"nodeBegin",value:function nodeBegin(context,key,leftKey,type,nodeType){context.row("&quot;"+key+"&quot;: {"),"node"===type&&context.indent(),"array"===nodeType&&context.row('"_t": "a",',"Array delta (member names indicate array indices)")}},{key:"nodeEnd",value:function nodeEnd(context,key,leftKey,type,nodeType,isLast){"node"===type&&context.indent(-1),context.row("}"+(isLast?"":","))}},{key:"format_unchanged",value:function format_unchanged(){}},{key:"format_movedestination",value:function format_movedestination(){}},{key:"format_node",value:function format_node(context,delta,left){this.formatDeltaChildren(context,delta,left)}}]),AnnotatedFormatter}(BaseFormatter),wrapPropertyName=function wrapPropertyName(name){return'<pre style="display:inline-block">&quot;'+name+"&quot;</pre>"},deltaAnnotations={added:function added(delta,left,key,leftKey){var formatLegend=" <pre>([newValue])</pre>";return void 0===leftKey?"new value"+formatLegend:"number"==typeof leftKey?"insert at index "+leftKey+formatLegend:"add property "+wrapPropertyName(leftKey)+formatLegend},modified:function modified(delta,left,key,leftKey){var formatLegend=" <pre>([previousValue, newValue])</pre>";return void 0===leftKey?"modify value"+formatLegend:"number"==typeof leftKey?"modify at index "+leftKey+formatLegend:"modify property "+wrapPropertyName(leftKey)+formatLegend},deleted:function deleted(delta,left,key,leftKey){var formatLegend=" <pre>([previousValue, 0, 0])</pre>";return void 0===leftKey?"delete value"+formatLegend:"number"==typeof leftKey?"remove index "+leftKey+formatLegend:"delete property "+wrapPropertyName(leftKey)+formatLegend},moved:function moved(delta,left,key,leftKey){return'move from <span title="(position to remove at original state)">index '+leftKey+'</span> to <span title="(position to insert at final state)">index '+delta[1]+"</span>"},textdiff:function textdiff(delta,left,key,leftKey){return"text diff"+(void 0===leftKey?"":"number"==typeof leftKey?" at index "+leftKey:" at property "+wrapPropertyName(leftKey))+', format is <a href="https://code.google.com/p/google-diff-match-patch/wiki/Unidiff">a variation of Unidiff</a>'}},formatAnyChange=function formatAnyChange(context,delta){var deltaType=this.getDeltaType(delta),annotator=deltaAnnotations[deltaType],htmlNote=annotator&&annotator.apply(annotator,Array.prototype.slice.call(arguments,1)),json=JSON.stringify(delta,null,2);"textdiff"===deltaType&&(json=json.split("\\n").join('\\n"+\n   "')),context.indent(),context.row(json,htmlNote),context.indent(-1)};AnnotatedFormatter.prototype.format_added=formatAnyChange,AnnotatedFormatter.prototype.format_modified=formatAnyChange,AnnotatedFormatter.prototype.format_deleted=formatAnyChange,AnnotatedFormatter.prototype.format_moved=formatAnyChange,AnnotatedFormatter.prototype.format_textdiff=formatAnyChange;var defaultInstance$1=void 0,annotated=Object.freeze({default:AnnotatedFormatter,format:function format$1(delta,left){return defaultInstance$1||(defaultInstance$1=new AnnotatedFormatter),defaultInstance$1.format(delta,left)}}),OPERATIONS_add="add",OPERATIONS_remove="remove",OPERATIONS_replace="replace",OPERATIONS_move="move",JSONFormatter=function(_BaseFormatter){function JSONFormatter(){classCallCheck(this,JSONFormatter);var _this=possibleConstructorReturn(this,(JSONFormatter.__proto__||Object.getPrototypeOf(JSONFormatter)).call(this));return _this.includeMoveDestinations=!0,_this}return inherits(JSONFormatter,_BaseFormatter),createClass(JSONFormatter,[{key:"prepareContext",value:function prepareContext(context){get(JSONFormatter.prototype.__proto__||Object.getPrototypeOf(JSONFormatter.prototype),"prepareContext",this).call(this,context),context.result=[],context.path=[],context.pushCurrentOp=function(obj){var op=obj.op,value=obj.value,val={op:op,path:this.currentPath()};void 0!==value&&(val.value=value),this.result.push(val)},context.pushMoveOp=function(to){var from=this.currentPath();this.result.push({op:OPERATIONS_move,from:from,path:this.toPath(to)})},context.currentPath=function(){return"/"+this.path.join("/")},context.toPath=function(toPath){var to=this.path.slice();return to[to.length-1]=toPath,"/"+to.join("/")}}},{key:"typeFormattterErrorFormatter",value:function typeFormattterErrorFormatter(context,err){context.out("[ERROR] "+err)}},{key:"rootBegin",value:function rootBegin(){}},{key:"rootEnd",value:function rootEnd(){}},{key:"nodeBegin",value:function nodeBegin(_ref,key,leftKey){_ref.path.push(leftKey)}},{key:"nodeEnd",value:function nodeEnd(_ref2){_ref2.path.pop()}},{key:"format_unchanged",value:function format_unchanged(){}},{key:"format_movedestination",value:function format_movedestination(){}},{key:"format_node",value:function format_node(context,delta,left){this.formatDeltaChildren(context,delta,left)}},{key:"format_added",value:function format_added(context,delta){context.pushCurrentOp({op:OPERATIONS_add,value:delta[0]})}},{key:"format_modified",value:function format_modified(context,delta){context.pushCurrentOp({op:OPERATIONS_replace,value:delta[1]})}},{key:"format_deleted",value:function format_deleted(context){context.pushCurrentOp({op:OPERATIONS_remove})}},{key:"format_moved",value:function format_moved(context,delta){var to=delta[1];context.pushMoveOp(to)}},{key:"format_textdiff",value:function format_textdiff(){throw new Error("Not implemented")}},{key:"format",value:function format(delta,left){var context={};return this.prepareContext(context),this.recurse(context,delta,left),context.result}}]),JSONFormatter}(BaseFormatter),last=function last(arr){return arr[arr.length-1]},opsByDescendingOrder=function opsByDescendingOrder(removeOps){return function sortBy(arr,pred){return arr.sort(pred),arr}(removeOps,(function(a,b){var splitA=a.path.split("/"),splitB=b.path.split("/");return splitA.length!==splitB.length?splitA.length-splitB.length:function compareByIndexDesc(indexA,indexB){var lastA=parseInt(indexA,10),lastB=parseInt(indexB,10);return isNaN(lastA)||isNaN(lastB)?0:lastB-lastA}(last(splitA),last(splitB))}))},partitionOps=function partitionOps(arr,fns){var initArr=Array(fns.length+1).fill().map((function(){return[]}));return arr.map((function(item){var position=fns.map((function(fn){return fn(item)})).indexOf(!0);return position<0&&(position=fns.length),{item:item,position:position}})).reduce((function(acc,item){return acc[item.position].push(item.item),acc}),initArr)},isMoveOp=function isMoveOp(_ref3){return"move"===_ref3.op},isRemoveOp=function isRemoveOp(_ref4){return"remove"===_ref4.op},defaultInstance$2=void 0,format$2=function format(delta,left){return defaultInstance$2||(defaultInstance$2=new JSONFormatter),function reorderOps(diff){var _partitionOps=partitionOps(diff,[isMoveOp,isRemoveOp]),_partitionOps2=slicedToArray(_partitionOps,3),moveOps=_partitionOps2[0],removedOps=_partitionOps2[1],restOps=_partitionOps2[2],removeOpsReverse=opsByDescendingOrder(removedOps);return[].concat(toConsumableArray(removeOpsReverse),toConsumableArray(moveOps),toConsumableArray(restOps))}(defaultInstance$2.format(delta,left))},jsonpatch=Object.freeze({default:JSONFormatter,partitionOps:partitionOps,format:format$2,log:function log(delta,left){console.log(format$2(delta,left))}});function chalkColor(name){return chalk&&chalk[name]||function(){for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return args}}var colors={added:chalkColor("green"),deleted:chalkColor("red"),movedestination:chalkColor("gray"),moved:chalkColor("yellow"),unchanged:chalkColor("gray"),error:chalkColor("white.bgRed"),textDiffLine:chalkColor("gray")},ConsoleFormatter=function(_BaseFormatter){function ConsoleFormatter(){classCallCheck(this,ConsoleFormatter);var _this=possibleConstructorReturn(this,(ConsoleFormatter.__proto__||Object.getPrototypeOf(ConsoleFormatter)).call(this));return _this.includeMoveDestinations=!1,_this}return inherits(ConsoleFormatter,_BaseFormatter),createClass(ConsoleFormatter,[{key:"prepareContext",value:function prepareContext(context){get(ConsoleFormatter.prototype.__proto__||Object.getPrototypeOf(ConsoleFormatter.prototype),"prepareContext",this).call(this,context),context.indent=function(levels){this.indentLevel=(this.indentLevel||0)+(void 0===levels?1:levels),this.indentPad=new Array(this.indentLevel+1).join("  "),this.outLine()},context.outLine=function(){this.buffer.push("\n"+(this.indentPad||""))},context.out=function(){for(var _len2=arguments.length,args=Array(_len2),_key2=0;_key2<_len2;_key2++)args[_key2]=arguments[_key2];for(var i=0,l=args.length;i<l;i++){var lines=args[i].split("\n"),text=lines.join("\n"+(this.indentPad||""));this.color&&this.color[0]&&(text=this.color[0](text)),this.buffer.push(text)}},context.pushColor=function(color){this.color=this.color||[],this.color.unshift(color)},context.popColor=function(){this.color=this.color||[],this.color.shift()}}},{key:"typeFormattterErrorFormatter",value:function typeFormattterErrorFormatter(context,err){context.pushColor(colors.error),context.out("[ERROR]"+err),context.popColor()}},{key:"formatValue",value:function formatValue(context,value){context.out(JSON.stringify(value,null,2))}},{key:"formatTextDiffString",value:function formatTextDiffString(context,value){var lines=this.parseTextDiff(value);context.indent();for(var i=0,l=lines.length;i<l;i++){var line=lines[i];context.pushColor(colors.textDiffLine),context.out(line.location.line+","+line.location.chr+" "),context.popColor();for(var pieces=line.pieces,pieceIndex=0,piecesLength=pieces.length;pieceIndex<piecesLength;pieceIndex++){var piece=pieces[pieceIndex];context.pushColor(colors[piece.type]),context.out(piece.text),context.popColor()}i<l-1&&context.outLine()}context.indent(-1)}},{key:"rootBegin",value:function rootBegin(context,type,nodeType){context.pushColor(colors[type]),"node"===type&&(context.out("array"===nodeType?"[":"{"),context.indent())}},{key:"rootEnd",value:function rootEnd(context,type,nodeType){"node"===type&&(context.indent(-1),context.out("array"===nodeType?"]":"}")),context.popColor()}},{key:"nodeBegin",value:function nodeBegin(context,key,leftKey,type,nodeType){context.pushColor(colors[type]),context.out(leftKey+": "),"node"===type&&(context.out("array"===nodeType?"[":"{"),context.indent())}},{key:"nodeEnd",value:function nodeEnd(context,key,leftKey,type,nodeType,isLast){"node"===type&&(context.indent(-1),context.out("array"===nodeType?"]":"}"+(isLast?"":","))),isLast||context.outLine(),context.popColor()}},{key:"format_unchanged",value:function format_unchanged(context,delta,left){void 0!==left&&this.formatValue(context,left)}},{key:"format_movedestination",value:function format_movedestination(context,delta,left){void 0!==left&&this.formatValue(context,left)}},{key:"format_node",value:function format_node(context,delta,left){this.formatDeltaChildren(context,delta,left)}},{key:"format_added",value:function format_added(context,delta){this.formatValue(context,delta[0])}},{key:"format_modified",value:function format_modified(context,delta){context.pushColor(colors.deleted),this.formatValue(context,delta[0]),context.popColor(),context.out(" => "),context.pushColor(colors.added),this.formatValue(context,delta[1]),context.popColor()}},{key:"format_deleted",value:function format_deleted(context,delta){this.formatValue(context,delta[0])}},{key:"format_moved",value:function format_moved(context,delta){context.out("==> "+delta[1])}},{key:"format_textdiff",value:function format_textdiff(context,delta){this.formatTextDiffString(context,delta[0])}}]),ConsoleFormatter}(BaseFormatter),defaultInstance$3=void 0,format$3=function format(delta,left){return defaultInstance$3||(defaultInstance$3=new ConsoleFormatter),defaultInstance$3.format(delta,left)},console$1=Object.freeze({default:ConsoleFormatter,format:format$3,log:function log$1(delta,left){console.log(format$3(delta,left))}}),index=Object.freeze({base:base,html:html,annotated:annotated,jsonpatch:jsonpatch,console:console$1}),defaultInstance$4=void 0;exports.DiffPatcher=DiffPatcher,exports.formatters=index,exports.console=console$1,exports.create=function create(options){return new DiffPatcher(options)},exports.dateReviver=function dateReviver(key,value){var parts=void 0;return"string"==typeof value&&(parts=/^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2})(?:\.(\d*))?(Z|([+-])(\d{2}):(\d{2}))$/.exec(value))?new Date(Date.UTC(+parts[1],+parts[2]-1,+parts[3],+parts[4],+parts[5],+parts[6],+(parts[7]||0))):value},exports.diff=function diff(){return defaultInstance$4||(defaultInstance$4=new DiffPatcher),defaultInstance$4.diff.apply(defaultInstance$4,arguments)},exports.patch=function patch(){return defaultInstance$4||(defaultInstance$4=new DiffPatcher),defaultInstance$4.patch.apply(defaultInstance$4,arguments)},exports.unpatch=function unpatch(){return defaultInstance$4||(defaultInstance$4=new DiffPatcher),defaultInstance$4.unpatch.apply(defaultInstance$4,arguments)},exports.reverse=function reverse(){return defaultInstance$4||(defaultInstance$4=new DiffPatcher),defaultInstance$4.reverse.apply(defaultInstance$4,arguments)},exports.clone=function clone$1(){return defaultInstance$4||(defaultInstance$4=new DiffPatcher),defaultInstance$4.clone.apply(defaultInstance$4,arguments)},Object.defineProperty(exports,"__esModule",{value:!0})}(exports,__webpack_require__(1331))},1331:function(module,exports){},1333:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"JsonDiffMain",(function(){return JsonDiffMain}));var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(373),_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__),jsondiffpatch__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(1330),_idle_scheduler__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(1329);function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg),value=info.value}catch(error){return void reject(error)}info.done?resolve(value):Promise.resolve(value).then(_next,_throw)}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var JsonDiffMain=function(){function JsonDiffMain(){!function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,JsonDiffMain),_defineProperty(this,"diffPatcher",new jsondiffpatch__WEBPACK_IMPORTED_MODULE_1__.DiffPatcher({arrays:{detectMove:!1},textDiff:{minLength:1}})),_defineProperty(this,"scheduler",new _idle_scheduler__WEBPACK_IMPORTED_MODULE_2__.a)}var _diff;return function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Constructor}(JsonDiffMain,[{key:"diff",value:(_diff=function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise((function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(void 0)}))}}(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark((function _callee(input){return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap((function _callee$(_context){for(;;)switch(_context.prev=_context.next){case 0:return _context.next=2,this.scheduler.request();case 2:return _context.abrupt("return",{id:input.id,delta:this.diffPatcher.diff(input.a,input.b)});case 3:case"end":return _context.stop()}}),_callee,this)}))),function diff(_x){return _diff.apply(this,arguments)})}]),JsonDiffMain}()}}]);
//# sourceMappingURL=3.a261277703fd81cd3d69.bundle.js.map